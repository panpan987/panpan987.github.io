<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VAM</title>
      <link href="/2023/09/02/vam-software/"/>
      <url>/2023/09/02/vam-software/</url>
      
        <content type="html"><![CDATA[<p>VAM可以制作3D视频</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2>]]></content>
      
      
      <categories>
          
          <category> VAM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VAM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python11</title>
      <link href="/2023/08/11/python11/"/>
      <url>/2023/08/11/python11/</url>
      
        <content type="html"><![CDATA[<p>bug的由来:<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-11_20-06-09.png"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python10</title>
      <link href="/2023/08/04/python10/"/>
      <url>/2023/08/04/python10/</url>
      
        <content type="html"><![CDATA[<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="文件编码"><a href="#文件编码" class="headerlink" title="文件编码"></a>文件编码</h3><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-04_21-52-00.png"><br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-04_21-54-16.png"><br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-04_21-58-00.png"></p><h3 id="什么是文件"><a href="#什么是文件" class="headerlink" title="什么是文件"></a>什么是文件</h3><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-04_21-59-55.png"></p><p>在日常生活中，文件操作主要包括打开、关闭、读、写等操作。<br>在Python中，主要就是<code>打开，读写，关闭</code>的文件操作。</p><ol><li>open()打开函数<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-10_23-35-26.png"><br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-10_23-37-56.png"></li></ol><p>F盘根目录下有个 测试.txt文件,内容为:</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">1.我长话短说，但是说来话长。2.俗话说的好:俗话说的好。3.你花了多少分钟看这些文字，就浪费了多少分钟。4.记是记得住，就是想不起来了。5.如果你能看见东西的话说明你不瞎。6.现在醒着的人应该都还没睡吧。7.我上次这么无语的时候还是在上次。8.有关你的发言，抛开内容不谈，我还是非常赞同的。9.千里江陵一日还，五百里江陵半日还。10.十年生死两茫茫，五年生死一茫茫。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>读操作<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开文件</span><span class="token comment"># 说明:前两位参数位置指定的,因为第三位参数不是encoding,所以把参数名写出来</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/测试.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 常用方法</span><span class="token comment"># read()方法: 文件对象.read(num)  num表示要从 文件中读取的数据的长度(单位是字符),如果没有传入num,那么就表示读取文件中所有的数据</span><span class="token comment"># win10记事本默认在正文前有一个空白字符,所以以下参数10显示9个字符</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"读取10字符的结果: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"读取全部内容的结果: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">读取10字符的结果: ﻿<span class="token number">1</span>.我长话短说，但读取全部内容的结果: 是说来话长。<span class="token number">2</span>.俗话说的好:俗话说的好。<span class="token number">3</span>.你花了多少分钟看这些文字，就浪费了多少分钟。<span class="token number">4</span>.记是记得住，就是想不起来了。<span class="token number">5</span>.如果你能看见东西的话说明你不瞎。<span class="token number">6</span>.现在醒着的人应该都还没睡吧。<span class="token number">7</span>.我上次这么无语的时候还是在上次。<span class="token number">8</span>.有关你的发言，抛开内容不谈，我还是非常赞同的。<span class="token number">9</span>.千里江陵一日还，五百里江陵半日还。<span class="token number">10</span>.十年生死两茫茫，五年生死一茫茫。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/测试.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># readlines()方法: 可以按行读取整个文件中的内容,并且返回的是一个列表,其中每一行的数据为一个元素.</span>lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"lines对象的类型: </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"lines对象的内容是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>lines<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lines对象的类型: <span class="token operator">&lt;</span>class <span class="token string">'list'</span><span class="token operator">></span>lines对象的内容是: <span class="token punctuation">[</span><span class="token string">'\ufeff1.我长话短说，但是说来话长。\n'</span>, <span class="token string">'2.俗话说的好:俗话说的好。\n'</span>, <span class="token string">'3.你花了多少分钟看这些文字，就浪费了多少分钟。\n'</span>, <span class="token string">'4.记是记得住，就是想不起来了。\n'</span>, <span class="token string">'5.如果你能看见东西的话说明你不瞎。\n'</span>, <span class="token string">'6.现在醒着的人应该都还没睡吧。\n'</span>, <span class="token string">'7.我上次这么无语的时候还是在上次。\n'</span>, <span class="token string">'8.有关你的发言，抛开内容不谈，我还是非常赞同的。\n'</span>, <span class="token string">'9.千里江陵一日还，五百里江陵半日还。\n'</span>, <span class="token string">'10.十年生死两茫茫，五年生死一茫茫。'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/测试.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># readline()方法,一次读取一行</span>line1 <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>line2 <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>line3 <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"第一行数据是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>line1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"第二行数据是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>line2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"第三行数据是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>line3<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">第一行数据是: ﻿<span class="token number">1</span>.我长话短说，但是说来话长。第二行数据是: <span class="token number">2</span>.俗话说的好:俗话说的好。第三行数据是: <span class="token number">3</span>.你花了多少分钟看这些文字，就浪费了多少分钟。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/测试.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># for循环读取文件行</span><span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"每一行数据是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>line<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">每一行数据是: ﻿<span class="token number">1</span>.我长话短说，但是说来话长。每一行数据是: <span class="token number">2</span>.俗话说的好:俗话说的好。每一行数据是: <span class="token number">3</span>.你花了多少分钟看这些文字，就浪费了多少分钟。每一行数据是: <span class="token number">4</span>.记是记得住，就是想不起来了。每一行数据是: <span class="token number">5</span>.如果你能看见东西的话说明你不瞎。每一行数据是: <span class="token number">6</span>.现在醒着的人应该都还没睡吧。每一行数据是: <span class="token number">7</span>.我上次这么无语的时候还是在上次。每一行数据是: <span class="token number">8</span>.有关你的发言，抛开内容不谈，我还是非常赞同的。每一行数据是: <span class="token number">9</span>.千里江陵一日还，五百里江陵半日还。每一行数据是: <span class="token number">10</span>.十年生死两茫茫，五年生死一茫茫。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 文件的关闭</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># with open 语法操作文件, 操作语句执行完文件会自动close</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/测试.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"每一行数据是: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>line<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>统计文件中单词个数案例:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开文件,以读取模式打开</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/word.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># 方式1:读取全部内容,通过字符串count方法统计单词数量</span><span class="token comment"># content = f.read()</span><span class="token comment"># count = content.count("需要统计的单词")</span><span class="token comment"># print(f"单词出现了&#123;count&#125;次")</span><span class="token comment"># 方式2:读取内容,一行一行读取</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>    line <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 去除开头和结尾的空格和换行符</span>    words <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>        <span class="token keyword">if</span> word <span class="token operator">==</span> <span class="token string">"需要统计的单词"</span><span class="token punctuation">:</span>            count <span class="token operator">+=</span> <span class="token number">1</span><span class="token comment"># 判断单词出现次数并累计</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"单词总共出现了</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">次"</span></span><span class="token punctuation">)</span><span class="token comment"># 关闭文件</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>写操作</li></ol><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-11_18-47-30.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开文件,不存在的文件, r,w,a</span><span class="token comment"># 文件不存在,w模式会创建文件</span><span class="token keyword">import</span> timef <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/test.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># write写入</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span> <span class="token comment"># 内容写入到内存中</span><span class="token comment"># flush刷新</span>f<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># close关闭</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment"># close方法,自带flush的功能</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开一个存在的文件</span><span class="token comment"># 文件已经存在,内容会被清空,重新写</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/test.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token comment"># write写入.flush刷新</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"哈哈哈!!!"</span><span class="token punctuation">)</span><span class="token comment"># close关闭</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>追加操作<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-11_18-57-47.png"></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开文件,不存在的文件, r,w,a</span><span class="token comment"># f = open("F:/test.txt","a",encoding="UTF-8")</span><span class="token comment"># write写入</span><span class="token comment"># f.write("QWERT")</span><span class="token comment"># f.close()</span><span class="token comment"># 打开一个存在的文件</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"F:/test.txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"YUIOP"</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先运行上面代码,再注释掉,运行下面的,会在文件中写 QWERTYUIOP</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python09</title>
      <link href="/2023/08/04/python09/"/>
      <url>/2023/08/04/python09/</url>
      
        <content type="html"><![CDATA[<h2 id="函数补充"><a href="#函数补充" class="headerlink" title="函数补充"></a>函数补充</h2><h3 id="函数的多返回值"><a href="#函数的多返回值" class="headerlink" title="函数的多返回值"></a>函数的多返回值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 按照返回值的顺序，写对应顺序的多个变量接收即可</span><span class="token comment"># 变量之间使用逗号隔开</span><span class="token comment"># 支持不同类型的数据return</span><span class="token keyword">def</span> <span class="token function">test_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token boolean">True</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token operator">=</span> test_return<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>helloTrue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="函数的多种传参方式"><a href="#函数的多种传参方式" class="headerlink" title="函数的多种传参方式"></a>函数的多种传参方式</h3><ol><li><p>位置参数：调用函数时根据函数定义的参数位置来传递参数 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'您的名字是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">, 年龄是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">, 性别是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>gender<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>user_info<span class="token punctuation">(</span><span class="token string">'Tom'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">您的名字是Tom, 年龄是17, 性别是男<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>关键字参数：函数调用时通过“键&#x3D;值”形式传递参数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'您的名字是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">, 年龄是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">, 性别是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>gender<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 关键字传参</span>user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Tom'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token comment"># 可以不按照固定顺序</span>user_info<span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>gender<span class="token operator">=</span><span class="token string">"男"</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token comment"># 可以和位置参数混用，位置参数必须在前，且匹配参数顺序</span>user_info<span class="token punctuation">(</span><span class="token string">'Tom'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">您的名字是Tom, 年龄是17, 性别是男您的名字是小明, 年龄是20, 性别是男您的名字是Tom, 年龄是17, 性别是男<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>缺省参数：缺省参数也叫默认参数，用于定义函数，为参数提供默认值，调用函数时可不传该默认参数的值（注意：所有位置参数必须出现在默认参数前，包括函数定义和调用）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'您的名字是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">, 年龄是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">, 性别是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>gender<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 不传就用默认值，传就使用传的值</span>user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'小爱'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'小李'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>gender<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">您的名字是小爱, 年龄是13, 性别是男您的名字是小李, 年龄是15, 性别是女<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>不定长参数：不定长参数也叫可变参数，用于不确定调用的时候会传递多少个参数（不传参也可以）。当嗲用函数时不确定参数个数时，可以使用不定长参数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 1. 位置不定长, *</span><span class="token comment"># 传进的所有参数都会被args变量收集，它会根据传进参数的位置合并为一个元组，args是元组类型</span><span class="token keyword">def</span> <span class="token function">user_info1</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"args参数的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">, 内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>args<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>user_info1<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"小美"</span><span class="token punctuation">,</span><span class="token string">"女孩"</span><span class="token punctuation">)</span><span class="token comment"># 2.关键字不定长, **</span><span class="token comment"># 参数是"键=值"形式的，会根据"键-值"组成字典</span><span class="token keyword">def</span> <span class="token function">user_info2</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"kwargs参数的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">, 内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>kwargs<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>user_info2<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"小王"</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">,</span>addr<span class="token operator">=</span><span class="token string">'安道尔'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">args参数的类型是：<span class="token operator">&lt;</span>class <span class="token string">'tuple'</span><span class="token operator">></span>, 内容是：<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token string">'小美'</span>, <span class="token string">'女孩'</span><span class="token punctuation">)</span>kwargs参数的类型是：<span class="token operator">&lt;</span>class <span class="token string">'dict'</span><span class="token operator">></span>, 内容是：<span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token builtin class-name">:</span> <span class="token string">'小王'</span>, <span class="token string">'age'</span><span class="token builtin class-name">:</span> <span class="token number">11</span>, <span class="token string">'gender'</span><span class="token builtin class-name">:</span> <span class="token string">'男'</span>, <span class="token string">'addr'</span><span class="token builtin class-name">:</span> <span class="token string">'安道尔'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>函数作为参数传递。传入计算逻辑，而非传入数据。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义一个函数，接收另一个函数作为传入参数</span><span class="token keyword">def</span> <span class="token function">test_func</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"compute参数的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"计算结果：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 定义一个函数，准备作为参数传入另一个函数</span><span class="token keyword">def</span> <span class="token function">compute</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token comment"># 调用，并传入函数</span>test_func<span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">compute参数的类型是：<span class="token operator">&lt;</span>class <span class="token string">'function'</span><span class="token operator">></span>计算结果：3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="lambda匿名函数"><a href="#lambda匿名函数" class="headerlink" title="lambda匿名函数"></a>lambda匿名函数</h3><p>函数的定义中</p><ul><li>def关键字，可以定义带有名称的函数</li><li>lambda关键字，可以定义匿名函数（无名称）<br>有名称的函数，可以基于名称重复使用。<br>无名称的匿名函数，只可临时使用一次。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义一个函数，接受其它函数输入</span><span class="token keyword">def</span> <span class="token function">test_func</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 通过lambda匿名函数的形式，将匿名函数作为参数传入</span><span class="token comment"># lambda语法:</span><span class="token comment"># lambda 传入参数：函数体（一行代码）</span>test_func<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span> x<span class="token operator">+</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">结果是：3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue01</title>
      <link href="/2023/07/03/vue01/"/>
      <url>/2023/07/03/vue01/</url>
      
        <content type="html"><![CDATA[<h2 id="创建Vue3项目"><a href="#创建Vue3项目" class="headerlink" title="创建Vue3项目"></a>创建Vue3项目</h2><p>在桌面打开Powershell窗口，输入<code>npm  init vue@latest</code>  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>panda<span class="token punctuation">\</span>Desktop<span class="token operator">></span> <span class="token function">npm</span> init vue@latestVue.js - The Progressive JavaScript Framework√ Project name: <span class="token punctuation">..</span>. vue3-project√ Add TypeScript? <span class="token punctuation">..</span>. No / Yes√ Add JSX Support? <span class="token punctuation">..</span>. No / Yes√ Add Vue Router <span class="token keyword">for</span> Single Page Application development? <span class="token punctuation">..</span>. No / Yes√ Add Pinia <span class="token keyword">for</span> state management? <span class="token punctuation">..</span>. No / Yes√ Add Vitest <span class="token keyword">for</span> Unit Testing? <span class="token punctuation">..</span>. No / Yes√ Add an End-to-End Testing Solution? » No√ Add ESLint <span class="token keyword">for</span> code quality? <span class="token punctuation">..</span>. No / YesScaffolding project <span class="token keyword">in</span> C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>panda<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>vue3-project<span class="token punctuation">..</span>.Done. Now run:  <span class="token builtin class-name">cd</span> vue3-project  <span class="token function">npm</span> <span class="token function">install</span>  <span class="token function">npm</span> run devPS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>panda<span class="token punctuation">\</span>Desktop<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再使用vscode打开，使用<code>npm install</code>安装依赖、<code>npm run dev</code>启动<br>浏览器打开：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-07-03_18-24-54.png"></p><p>关键文件： </p><ul><li>vite.config.js - 项目的配置文件，基于vite的配置</li><li>package.json - 项目包文件 核心依赖项变成Vue3.x和vite</li><li>main.js - 入口文件 createApp函数创建应用实例</li><li>app.vue - 根组件 SFC单文件组件 script - template - style<br>变化一：脚本script和模块template顺序调整<br>变化二：模板template不再要求唯一根元素<br>变化三：脚本script添加setup标识支持组合式API  </li><li>index.html - 单页入口 提供id为app的挂载点</li></ul><h3 id="组合式API"><a href="#组合式API" class="headerlink" title="组合式API"></a>组合式API</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>word、excel、ppt练习</title>
      <link href="/2023/06/15/word-excel-ppt-lian-xi/"/>
      <url>/2023/06/15/word-excel-ppt-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Word部分"><a href="#一、Word部分" class="headerlink" title="一、Word部分"></a>一、Word部分</h2><h3 id="word1案例"><a href="#word1案例" class="headerlink" title="word1案例"></a>word1案例</h3><p>操作说明：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/wd1.JPG"><br>步骤分解：  </p><ol><li><p>选择标题，设置字体、大小、加粗<img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_15_02_56_624.gif"><br>字符间距加宽6磅，水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_15_22_59_169.gif"> </p></li><li><p>正文仿宋、三号<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_15_27_14_746.gif"><br>  两倍行距，段前段后0.5行<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_15_29_45_102.gif"> </p></li><li><p>插入4行3列的表格<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_15_33_44_271.gif"> </p><p>   （1）输入文字（略）<br>   （2）文字楷体、小四、单倍行距、水平居中<br>   <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_16_00_42_574.gif"><br>   (3)第一行加粗<br>   <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_15_16_05_55_916.gif"></p><p>   （4）图片<br>   <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_11_10_936.gif"><br>   （5）第一列列宽4厘米，第三列列宽5.5厘米<br>   <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_18_25_300.gif"><br>   （6）居中、环绕<br>   <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_20_21_795.gif"></p></li></ol><h3 id="word2案例"><a href="#word2案例" class="headerlink" title="word2案例"></a>word2案例</h3><p>操作说明：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/wd2.JPG"><br>步骤分解：</p><ol><li>选择标题，微软雅黑、小一号、加粗、红色<img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_37_26_510.gif"><br>字符间距加宽0.5厘米，对齐方式为水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_39_29_475.gif"> </li><li>页面设置，上下边距2厘米，左右2.5厘米，纸张大小16开<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_41_30_245.gif">   </li><li>正文楷体3号，首行缩进2字符<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_43_36_873.gif"></li><li>第二段字体仿宋、三号、段前段后12磅，添加边框，双实线，标准深蓝色，宽1.5磅，应用于段落<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_49_03_716.gif">  </li><li>第三到第五段字体楷体、三号，段落首行缩进2字符，行距固定24磅<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_57_03_460.gif">    </li><li>最后一段文字添加底纹，标准浅绿色，应用于文字<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_20_59_00_936.gif"></li></ol><h2 id="二、Excel部分"><a href="#二、Excel部分" class="headerlink" title="二、Excel部分"></a>二、Excel部分</h2><p>操作说明：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/ex1.JPG"><br>步骤分解： </p><ol><li><p>(1) 工作表重命名<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_07_50_96.gif"><br>(2) 按要求合并居中、合并单元格<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_11_05_840.gif"><br>(3) 按要求填充<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_12_38_846.gif"><br>(4) 按要求填充<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_16_47_885.gif">  </p></li><li><p>(1)甲乙丙金额计算，输好公式按回车键（Enter）<br>  <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_25_17_345.gif"><br>  (2)求和<br>  <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_28_35_815.gif"><br>  (3)求平均值<br>  <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_30_27_997.gif"><br>  (4)月销售额用函数求和<br>  <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_21_59_10_593.gif"> </p></li><li><p>表格样式，浅色14<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_01_25_183.gif">   </p></li><li><p>设置货币样式，保留两位小数（选择不连续的区域需要按住 Ctrl 键）<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_03_02_410.gif">  </p></li><li><p>华文仿宋、16、粗体，行高、列宽，垂直居中、水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_06_53_933.gif"> </p></li><li><p>插入图表，创建工作表，移动图表(选择不连续的区域需要按住 Ctrl 键)<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_09_58_13.gif"> </p></li><li><p>移动工作表<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_15_10_531.gif">  </p></li><li><p>工作簿标签改为红色<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_16_31_441.gif">   </p></li><li><p>横向、A4，居中打印，页边距3厘米<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_38_36_563.gif">   </p></li><li><p>工作表设置保护密码<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_17_22_40_27_595.gif"></p></li></ol><h2 id="三、PPT部分"><a href="#三、PPT部分" class="headerlink" title="三、PPT部分"></a>三、PPT部分</h2><h3 id="PPT1案例"><a href="#PPT1案例" class="headerlink" title="PPT1案例"></a>PPT1案例</h3><p>操作说明：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/pt.JPG"><br>步骤分解：   </p><ol><li>渐变填充-钢蓝艺术字<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_19_49_54_466.gif">  </li><li>两栏内容，居中对齐，微软雅黑，多倍行距，首行缩进2字符<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_19_55_10_413.gif"><br>插入图片，高7厘米，宽8厘米，轮廓浅蓝色，效果“紧密倒影、接触”<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_20_01_10_745.gif">   </li><li>5个横向文本框，轮廓蓝色，填充浅绿、着色6，高2厘米，宽6厘米，相对于幻灯片水平居中。<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_20_14_17_566.gif">   </li><li>4行2列的表格，依次输入文字，表格内外边框线为3磅的绿色实线<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_20_32_54_73.gif">   </li><li>调整第三张和第四张幻灯片的位置<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_20_35_55_244.gif"></li></ol><h3 id="PPT2案例"><a href="#PPT2案例" class="headerlink" title="PPT2案例"></a>PPT2案例</h3><p>操作说明：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/pt2.JPG"><br>步骤分解： </p><ol><li>在第一张幻灯片前插入仅标题的幻灯片，插除、右下、应用于所有<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_20_58_34_80.gif">  </li><li>（1）指定位置插入圆角矩形<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_05_20_486.gif"><br>（2）高3厘米，宽8厘米，行状填充，行状轮廓<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_05_20_486.gif"><br>（3）输入文字，设置字体<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_11_49_556.gif"><br>（4）在上一个圆角矩形下再复制一个样式一样的，水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_15_38_50.gif"><br>（5）在右侧插入基本行状，填充红色，自行调整位置和大小<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_19_12_466.gif">    </li><li>（1）标题内容段落居中对齐，左侧文字微软雅黑、20，段落1.5倍行距<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_22_59_851.gif"><br>（2）插入图片，高8厘米，宽13厘米<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_26_02_429.gif">   </li><li>（1）标题内容段落水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_28_00_165.gif"><br>（2）等高等宽、相对于幻灯片水平居中<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/%E5%BD%95%E5%88%B6_2023_06_18_21_31_20_924.gif"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Office </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python08</title>
      <link href="/2023/06/09/python08/"/>
      <url>/2023/06/09/python08/</url>
      
        <content type="html"><![CDATA[<h2 id="数据容器"><a href="#数据容器" class="headerlink" title="数据容器"></a>数据容器</h2><p> 一种可以容纳多份数据的数据类型，容纳的每一份数据称之为1个元素。每一个元素，可以是任意类型的数据，如字符串、数据、布尔等。<br> 数据容器根据特点的不同，如：</p><ul><li>是否支持重复元素</li><li>是否可以修改</li><li>是否有序，等<br> 分为5类，分别是：<br> 列表（list）、元组（tuple）、字符串（str）、集合（set）、字典（dict）</li></ul><h3 id="一、列表（list）"><a href="#一、列表（list）" class="headerlink" title="一、列表（list）"></a>一、列表（list）</h3><p>一层列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token string">'Java'</span><span class="token punctuation">,</span> <span class="token string">'html'</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token string">'python'</span>, <span class="token string">'Java'</span>, <span class="token string">'html'</span>, <span class="token number">666</span>, True<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>嵌套列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>, <span class="token punctuation">[</span><span class="token number">4</span>, <span class="token number">5</span>, <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如何从列表中取出特定位置的数据呢？<br>我们可以使用：下标索引<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-06-09_20-30-12.png"><br>如图：列表中的每一个元素，都有其位置下标索引，从前向后的方向，从0开始，依次递增，我们只需要按照下标索引，即可取得对应位置的元素。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">,</span><span class="token string">'C++'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list3<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PythonJavaC++<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>列表的下标（索引）- 反向</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-06-11_17-47-26.png"><br>嵌套列表的下标（索引）<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-06-11_17-49-28.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="列表的常用操作（方法）"><a href="#列表的常用操作（方法）" class="headerlink" title="列表的常用操作（方法）"></a>列表的常用操作（方法）</h4><ol><li>查找某元素的下标<br>功能：查找指定元素再列表的小标，如果找不到，报错ValueError.<br>语法：列表.index(元素)<pre class="line-numbers language-python" data-language="python"><code class="language-python">list4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"小A"</span><span class="token punctuation">,</span><span class="token string">"大S"</span><span class="token punctuation">,</span><span class="token string">"迷你"</span><span class="token punctuation">]</span><span class="token comment"># 1.查看元素下标：index</span>index <span class="token operator">=</span> list4<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"大S"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"1.大S在列表中的下标索引是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>index<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 2.在数组指定位置插入元素：insert</span>list4<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"雷欧克"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2.执行insert方法，新数组为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>list4<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 3.在数组末尾插入元素：append 方法</span>list4<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"田七"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"3.执行append方法，新数组为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>list4<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 4.在数组末尾追加新的数组：extend</span>list5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>list4<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>list5<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"4.列表在追加元素之后的结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>list4<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 5.删除指定下标索引的元素（2种方式）</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"小磊"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"CSS"</span><span class="token punctuation">]</span><span class="token comment"># 5.1 方式1：del 数组[下标]</span><span class="token keyword">del</span> newList<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"5.1.使用del删除元素后为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>newList<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 5.2 方式2：列表.pop(下标)</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"小磊"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"CSS"</span><span class="token punctuation">]</span>element <span class="token operator">=</span> newList<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"5.2.使用pop删除</span><span class="token interpolation"><span class="token punctuation">&#123;</span>element<span class="token punctuation">&#125;</span></span><span class="token string">后新数组为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>newList<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 6.删除某元素在列表中的第一个匹配项：列表.remove(元素)</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"小磊"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"CSS"</span><span class="token punctuation">]</span>newList<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"6.通过remove移除元素后结果为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>newList<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 7.清空整个列表：clear</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"小磊"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"CSS"</span><span class="token punctuation">]</span>newList<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"7.清空后的列表为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>newList<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 8.统计某列表内某元素的数量:count</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">]</span>count <span class="token operator">=</span> newList<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"8.列表中Java的数量为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 9.统计列表中总共有多少个元素:len(数组名)</span>newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">]</span>count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>newList<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"9.列表的元素数量总共有</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">个"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.大S在列表中的下标索引是：1<span class="token number">2</span>.执行insert方法，新数组为<span class="token punctuation">[</span><span class="token string">'小A'</span>, <span class="token string">'雷欧克'</span>, <span class="token string">'大S'</span>, <span class="token string">'迷你'</span><span class="token punctuation">]</span><span class="token number">3</span>.执行append方法，新数组为<span class="token punctuation">[</span><span class="token string">'小A'</span>, <span class="token string">'雷欧克'</span>, <span class="token string">'大S'</span>, <span class="token string">'迷你'</span>, <span class="token string">'田七'</span><span class="token punctuation">]</span><span class="token number">4</span>.列表在追加元素之后的结果是：<span class="token punctuation">[</span><span class="token string">'小A'</span>, <span class="token string">'雷欧克'</span>, <span class="token string">'大S'</span>, <span class="token string">'迷你'</span>, <span class="token string">'田七'</span>, <span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span><span class="token number">5.1</span>.使用del删除元素后为<span class="token punctuation">[</span><span class="token string">'小磊'</span>, <span class="token string">'Java'</span>, <span class="token string">'Python'</span><span class="token punctuation">]</span><span class="token number">5.2</span>.使用pop删除小磊后新数组为<span class="token punctuation">[</span><span class="token string">'Java'</span>, <span class="token string">'Python'</span>, <span class="token string">'CSS'</span><span class="token punctuation">]</span><span class="token number">6</span>.通过remove移除元素后结果为<span class="token punctuation">[</span><span class="token string">'小磊'</span>, <span class="token string">'Python'</span>, <span class="token string">'Java'</span>, <span class="token string">'CSS'</span><span class="token punctuation">]</span><span class="token number">7</span>.清空后的列表为<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token number">8</span>.列表中Java的数量为3<span class="token number">9</span>.列表的元素数量总共有5个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>学习编程，大多数方法是记忆不下来的，一般不需要刻意去记忆。我们要做的是，有一个模糊的印象，知晓有这样的用法即可。需要的时候，随时查阅资料即可。</li></ol><p>经过上述的列表的学习，我们可以总结出列表有如下特点：  </p><ol><li>可以容纳多个元素（上限为2**63-1、9223372036854775807个）</li><li>可以容纳不同类型的元素</li><li>数据是有序存储的（有下标序号）</li><li>允许重复元素存在</li><li>可以修改（增加或删除元素等）</li></ol><p>练习：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-07-29_21-00-01.png">  </p><h4 id="列表的循环遍历"><a href="#列表的循环遍历" class="headerlink" title="列表的循环遍历"></a>列表的循环遍历</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""演示对list列表的循环，使用while和for循环2种方式"""</span><span class="token keyword">def</span> <span class="token function">list_while_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"草稚京"</span><span class="token punctuation">,</span><span class="token string">"雅典娜"</span><span class="token punctuation">,</span><span class="token string">"菲欧娜"</span><span class="token punctuation">]</span>    index <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> index <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>newList<span class="token punctuation">)</span><span class="token punctuation">:</span>        element <span class="token operator">=</span> newList<span class="token punctuation">[</span>index<span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"列表的元素：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>element<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        index <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">def</span> <span class="token function">list_for_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"早川秋"</span><span class="token punctuation">,</span><span class="token string">"欧阳修"</span><span class="token punctuation">,</span><span class="token string">"电次"</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> element <span class="token keyword">in</span> newList<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"列表的元素有：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>element<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>list_while_func<span class="token punctuation">(</span><span class="token punctuation">)</span>list_for_func<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">列表的元素：草稚京列表的元素：雅典娜列表的元素：菲欧娜列表的元素有：早川秋列表的元素有：欧阳修列表的元素有：电次<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>练习：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-07-29_21-26-17.png">  </p><h3 id="二、元组"><a href="#二、元组" class="headerlink" title="二、元组"></a>二、元组</h3><p>列表是可以修改的。如果想要传递的信息，不被修改，列表就不合适了。<br>元组同列表一样，都是可以封装多个、不同类型的元素在内。但最大的不同点在于：元组一旦定义完成，就不可以修改。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义元组</span>t1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>t3 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t1的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">，内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t2的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">，内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t3的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>t3<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">，内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t3<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 定义单个元素的元组,注意后面加个逗号，否则是str类型</span>t4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t4的类型是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>t4<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">，内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t4<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 元组也可以嵌套的</span><span class="token comment"># 元组可以通过下标索引定位具体元素</span><span class="token comment"># 元组内如果有list，list内的内容是可以修改的</span>t9 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"AA"</span><span class="token punctuation">,</span><span class="token string">"BB"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t9的内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t9<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>t9<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"蔡文姬"</span>t9<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"马可波罗"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"t9的内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t9<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">t1的类型是：<span class="token operator">&lt;</span>class <span class="token string">'tuple'</span><span class="token operator">></span>，内容是：<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">'hello'</span>, True<span class="token punctuation">)</span>t2的类型是：<span class="token operator">&lt;</span>class <span class="token string">'tuple'</span><span class="token operator">></span>，内容是：<span class="token punctuation">(</span><span class="token punctuation">)</span>t3的类型是：<span class="token operator">&lt;</span>class <span class="token string">'tuple'</span><span class="token operator">></span>，内容是：<span class="token punctuation">(</span><span class="token punctuation">)</span>t4的类型是：<span class="token operator">&lt;</span>class <span class="token string">'tuple'</span><span class="token operator">></span>，内容是：<span class="token punctuation">(</span><span class="token string">'hello'</span>,<span class="token punctuation">)</span>t9的内容是：<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token punctuation">[</span><span class="token string">'AA'</span>, <span class="token string">'BB'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>t9的内容是：<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token punctuation">[</span><span class="token string">'蔡文姬'</span>, <span class="token string">'马可波罗'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>``<span class="token variable"><span class="token variable">`</span>  练习：<span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-07-29_21-54-13.png<span class="token punctuation">)</span> <span class="token comment">### 三、字符串</span><span class="token variable">`</span></span>``python<span class="token comment"># 1.字符串下标索引</span>newStr <span class="token operator">=</span> <span class="token string">"Devil May Cry"</span>value1 <span class="token operator">=</span> newStr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>value2 <span class="token operator">=</span> newStr<span class="token punctuation">[</span>-11<span class="token punctuation">]</span>print<span class="token punctuation">(</span>f<span class="token string">"1.从字符串&#123;newStr&#125;取下标为2的元素值为&#123;value1&#125;，下标-16的元素值为&#123;value2&#125;"</span><span class="token punctuation">)</span><span class="token comment"># 同元组一样，字符串是一个：无法修改的数据容器</span><span class="token comment"># 2.index方法</span>value <span class="token operator">=</span> newStr.index<span class="token punctuation">(</span><span class="token string">"May"</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"2.在字符串&#123;newStr&#125;中查找May,其起始下标是：&#123;value&#125;"</span><span class="token punctuation">)</span><span class="token comment"># 3.replace方法，将字符串里内容进行替换，得到一个新字符串</span>newNewStr <span class="token operator">=</span> newStr.replace<span class="token punctuation">(</span><span class="token string">"May"</span>, <span class="token string">"Must"</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"3.将字符串&#123;newStr&#125;替换后得到&#123;newNewStr&#125;"</span><span class="token punctuation">)</span><span class="token comment"># 4.split 字符串的分割，将字符串划分多个字符串，并存入列表对象中</span>newList <span class="token operator">=</span> newStr.split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"4.将字符串&#123;newStr&#125;进行切割后得到&#123;newList&#125;"</span><span class="token punctuation">)</span><span class="token comment"># 5.strip() 可以去除字符串前后空格</span>newStr1 <span class="token operator">=</span> <span class="token string">"    Devil May Cry     "</span>newNewStr1 <span class="token operator">=</span> newStr1.strip<span class="token punctuation">(</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"5.1.字符串&#123;newStr1&#125;进行split切分后得到&#123;newNewStr1&#125;"</span><span class="token punctuation">)</span>newStr2 <span class="token operator">=</span> <span class="token string">"123Devil May Cry321"</span>newNewStr2 <span class="token operator">=</span> newStr2.strip<span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"5.2.字符串&#123;newStr2&#125;进行split切分后得到&#123;newNewStr2&#125;"</span><span class="token punctuation">)</span><span class="token comment"># 6.统计字符串中某个字符出现的次数</span>newStr <span class="token operator">=</span> <span class="token string">"Devil May Cry"</span>count <span class="token operator">=</span> newStr.count<span class="token punctuation">(</span><span class="token string">"y"</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"6.字母y在&#123;newStr&#125;里出现了&#123;count&#125;次"</span><span class="token punctuation">)</span><span class="token comment"># 7.统计字符串的长度</span>newStr <span class="token operator">=</span> <span class="token string">"Devil May Cry"</span><span class="token builtin class-name">cd</span> <span class="token operator">=</span> len<span class="token punctuation">(</span>newStr<span class="token punctuation">)</span>print<span class="token punctuation">(</span>f<span class="token string">"7.字符串&#123;newStr&#125;的长度为&#123;cd&#125;"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.从字符串Devil May Cry取下标为2的元素值为v，下标-16的元素值为v<span class="token number">2</span>.在字符串Devil May Cry中查找May,其起始下标是：6<span class="token number">3</span>.将字符串Devil May Cry替换后得到Devil Must Cry<span class="token number">4</span>.将字符串Devil May Cry进行切割后得到<span class="token punctuation">[</span><span class="token string">'Devil'</span>, <span class="token string">'May'</span>, <span class="token string">'Cry'</span><span class="token punctuation">]</span><span class="token number">5.1</span>.字符串    Devil May Cry     进行split切分后得到Devil May Cry<span class="token number">5.2</span>.字符串123Devil May Cry321进行split切分后得到Devil May Cry<span class="token number">6</span>.字母y在Devil May Cry里出现了2次<span class="token number">7</span>.字符串Devil May Cry加的长度为14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三-5序列"><a href="#三-5序列" class="headerlink" title="三-5序列"></a>三-5序列</h3><p>序列是指：内容连续、有序，可使用下标索引的一类数据容器。<br>列表、元组、字符串，均可以视为序列。<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-07-29_22-39-08.png"><br>序列的常用操作：切片，即从一个序列中，取出一个子序列。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 对list进行切片，从1开始，4结束，步长1</span>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>result1 <span class="token operator">=</span> my_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token comment"># 默认步长1，所以可以省略不写</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果1：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 对tuple（元组）进行切片，从头开始，步长1可以省略</span>my_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>result2 <span class="token operator">=</span> my_tuple<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果2：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 对str进行切片，从头开始，到最后结束，步长2</span>my_str <span class="token operator">=</span> <span class="token string">"01234567"</span>result3 <span class="token operator">=</span> my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果3：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result3<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 对str进行切片，从头开始，到最后结束，步长-1</span>my_str <span class="token operator">=</span> <span class="token string">"01234567"</span>result4 <span class="token operator">=</span> my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果4：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result4<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">结果1：<span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>结果2：<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">5</span>, <span class="token number">6</span><span class="token punctuation">)</span>结果3：0246结果4：76543210<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、集合"><a href="#四、集合" class="headerlink" title="四、集合"></a>四、集合</h3><p>不支持元素的重复，无序。使用{元素1，元素2，…}定义.<br>不支持下标索引访问，但可以修改元素。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义集合</span>my_set <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Html"</span><span class="token punctuation">&#125;</span>my_set_empty <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"my_set的内容是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_set<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"my_set_empty的内容是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_set_empty<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 添加新元素</span>my_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"C++"</span><span class="token punctuation">)</span>my_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"my_set添加匀速后的结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_set<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 移除元素</span>my_set<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"Html"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"my_set移除Html结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_set<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 随机取出一个元素</span>my_set <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"Java"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Go"</span><span class="token punctuation">,</span><span class="token string">"Html"</span><span class="token punctuation">&#125;</span>element <span class="token operator">=</span> my_set<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"集合被取出元素是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>element<span class="token punctuation">&#125;</span></span><span class="token string">，取出元素后集合是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_set<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 2个集合合并</span>set1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span>set2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span>set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>set2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2个集合合并结果：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>set3<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2个集合合并后集合1结果：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>set1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2个集合合并后集合2结果：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>set2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 集合的遍历。</span><span class="token comment"># 集合不支持下标索引，索引不能用while循环</span><span class="token comment"># 可以用for循环</span>set1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> item <span class="token keyword">in</span> set1<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"集合的元素有：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>item<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">my_set的内容是<span class="token punctuation">&#123;</span><span class="token string">'Java'</span>, <span class="token string">'Html'</span>, <span class="token string">'Go'</span>, <span class="token string">'Python'</span><span class="token punctuation">&#125;</span>my_set_empty的内容是set<span class="token punctuation">(</span><span class="token punctuation">)</span>my_set添加匀速后的结果是：<span class="token punctuation">&#123;</span><span class="token string">'Go'</span>, <span class="token string">'Java'</span>, <span class="token string">'C++'</span>, <span class="token string">'Html'</span>, <span class="token string">'Python'</span><span class="token punctuation">&#125;</span>my_set移除Html结果是：<span class="token punctuation">&#123;</span><span class="token string">'Go'</span>, <span class="token string">'Java'</span>, <span class="token string">'C++'</span>, <span class="token string">'Python'</span><span class="token punctuation">&#125;</span>集合被取出元素是：Java，取出元素后集合是：<span class="token punctuation">&#123;</span><span class="token string">'Html'</span>, <span class="token string">'Go'</span>, <span class="token string">'Python'</span><span class="token punctuation">&#125;</span><span class="token number">2</span>个集合合并结果：<span class="token punctuation">&#123;</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">5</span>, <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token number">2</span>个集合合并后集合1结果：<span class="token punctuation">&#123;</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token number">2</span>个集合合并后集合2结果：<span class="token punctuation">&#123;</span><span class="token number">1</span>, <span class="token number">5</span>, <span class="token number">6</span><span class="token punctuation">&#125;</span>集合的元素有：1集合的元素有：2集合的元素有：3集合的元素有：5集合的元素有：6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、字典"><a href="#五、字典" class="headerlink" title="五、字典"></a>五、字典</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义字典   &#123;key1: value1,key2:value2,...&#125;</span>my_dict1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"大门"</span><span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">"猪猪"</span><span class="token punctuation">:</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token string">"八神"</span><span class="token punctuation">:</span><span class="token number">77</span><span class="token punctuation">&#125;</span><span class="token comment"># 定义空字典</span>my_dict2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典1的内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典2的内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 字典中key不能重复，相同key的最后一个value会覆盖前面的value</span><span class="token comment"># 从字典中基于key获取value</span>my_dict1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"大门"</span><span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">"猪猪"</span><span class="token punctuation">:</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token string">"八神"</span><span class="token punctuation">:</span><span class="token number">77</span><span class="token punctuation">&#125;</span>score <span class="token operator">=</span> my_dict1<span class="token punctuation">[</span><span class="token string">"猪猪"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"猪猪的考试成绩是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>score<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 字典可以嵌套的,如何表示下面数据</span><span class="token comment">#  ——————————————————————————————</span><span class="token comment">#  |  姓名  | 语文 | 数学  | 英语 |</span><span class="token comment">#  | 叶湘伦 |  127 | 130  |  59  |</span><span class="token comment">#  | 祝英台 |  105 | 140  |  116 |</span><span class="token comment">#  | 罗密欧 |  96  | 146  |  89  |</span><span class="token comment">#  ——————————————————————————————</span>stu_score_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"叶湘伦"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"语文"</span><span class="token punctuation">:</span> <span class="token number">127</span><span class="token punctuation">,</span>        <span class="token string">"数学"</span><span class="token punctuation">:</span> <span class="token number">130</span><span class="token punctuation">,</span>        <span class="token string">"英语"</span><span class="token punctuation">:</span> <span class="token number">59</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"祝英台"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"语文"</span><span class="token punctuation">:</span> <span class="token number">105</span><span class="token punctuation">,</span>        <span class="token string">"数学"</span><span class="token punctuation">:</span> <span class="token number">140</span><span class="token punctuation">,</span>        <span class="token string">"英语"</span><span class="token punctuation">:</span> <span class="token number">116</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"罗密欧"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"语文"</span><span class="token punctuation">:</span> <span class="token number">96</span><span class="token punctuation">,</span>        <span class="token string">"数学"</span><span class="token punctuation">:</span> <span class="token number">146</span><span class="token punctuation">,</span>        <span class="token string">"英语"</span><span class="token punctuation">:</span> <span class="token number">89</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"学生的考试信息是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>stu_score_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 从嵌套字典中获取数据</span><span class="token comment"># 查看罗密欧的数学成绩</span>lmo_sx <span class="token operator">=</span> stu_score_dict<span class="token punctuation">[</span><span class="token string">"罗密欧"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"数学"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"罗密欧的数学成绩是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>lmo_sx<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">字典1的内容是：<span class="token punctuation">&#123;</span><span class="token string">'大门'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'猪猪'</span><span class="token builtin class-name">:</span> <span class="token number">88</span>, <span class="token string">'八神'</span><span class="token builtin class-name">:</span> <span class="token number">77</span><span class="token punctuation">&#125;</span> 字典2的内容是：<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>猪猪的考试成绩是：88学生的考试信息是：<span class="token punctuation">&#123;</span><span class="token string">'叶湘伦'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">127</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">130</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">59</span><span class="token punctuation">&#125;</span>, <span class="token string">'祝英台'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">105</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">140</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">116</span><span class="token punctuation">&#125;</span>, <span class="token string">'罗密欧'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">96</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">146</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">89</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>罗密欧的数学成绩是：146<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"小红"</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">"小美"</span><span class="token punctuation">:</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token string">"小刚"</span><span class="token punctuation">:</span> <span class="token number">77</span><span class="token punctuation">&#125;</span><span class="token comment"># 新增元素</span>my_dict<span class="token punctuation">[</span><span class="token string">"小智"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">55</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典经过新增元素后，结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 更新元素</span>my_dict<span class="token punctuation">[</span><span class="token string">"小美"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典经过更新元素后，结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 删除元素</span>score <span class="token operator">=</span> my_dict<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"小美"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典中被移除了一个元素，结果：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">&#125;</span></span><span class="token string">,小美的考试成绩是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>score<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 清空元素， clear</span>my_dict<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典被清空了，内容是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 获取全部的key</span>my_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"小红"</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">"小美"</span><span class="token punctuation">:</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token string">"小刚"</span><span class="token punctuation">:</span> <span class="token number">77</span><span class="token punctuation">&#125;</span>keys <span class="token operator">=</span> my_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字典的全部key是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>keys<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 遍历字典</span><span class="token comment"># 方式1：通过获取全部的key来完成遍历</span><span class="token keyword">for</span> key <span class="token keyword">in</span> keys<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"1.字典的key是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>key<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"1.字典的value是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 方式2：直接对字典进行for循环，每一次循环都是直接得到key</span><span class="token keyword">for</span> key <span class="token keyword">in</span> my_dict<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2.字典的key是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>key<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"2.字典的value是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 字典不可以使用while循环，因为字典不支持下标索引</span><span class="token comment"># len(字典)计算字典内的元素数量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">字典1的内容是：<span class="token punctuation">&#123;</span><span class="token string">'大门'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'猪猪'</span><span class="token builtin class-name">:</span> <span class="token number">88</span>, <span class="token string">'八神'</span><span class="token builtin class-name">:</span> <span class="token number">77</span><span class="token punctuation">&#125;</span>字典2的内容是：<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>猪猪的考试成绩是：88学生的考试信息是：<span class="token punctuation">&#123;</span><span class="token string">'叶湘伦'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">127</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">130</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">59</span><span class="token punctuation">&#125;</span>, <span class="token string">'祝英台'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">105</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">140</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">116</span><span class="token punctuation">&#125;</span>, <span class="token string">'罗密欧'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'语文'</span><span class="token builtin class-name">:</span> <span class="token number">96</span>, <span class="token string">'数学'</span><span class="token builtin class-name">:</span> <span class="token number">146</span>, <span class="token string">'英语'</span><span class="token builtin class-name">:</span> <span class="token number">89</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>罗密欧的数学成绩是：146字典经过新增元素后，结果是：<span class="token punctuation">&#123;</span><span class="token string">'小红'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'小美'</span><span class="token builtin class-name">:</span> <span class="token number">66</span>, <span class="token string">'小刚'</span><span class="token builtin class-name">:</span> <span class="token number">77</span>, <span class="token string">'小智'</span><span class="token builtin class-name">:</span> <span class="token number">55</span><span class="token punctuation">&#125;</span>字典经过更新元素后，结果是：<span class="token punctuation">&#123;</span><span class="token string">'小红'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'小美'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'小刚'</span><span class="token builtin class-name">:</span> <span class="token number">77</span>, <span class="token string">'小智'</span><span class="token builtin class-name">:</span> <span class="token number">55</span><span class="token punctuation">&#125;</span>字典中被移除了一个元素，结果：<span class="token punctuation">&#123;</span><span class="token string">'小红'</span><span class="token builtin class-name">:</span> <span class="token number">99</span>, <span class="token string">'小刚'</span><span class="token builtin class-name">:</span> <span class="token number">77</span>, <span class="token string">'小智'</span><span class="token builtin class-name">:</span> <span class="token number">55</span><span class="token punctuation">&#125;</span>,小美的考试成绩是：99字典被清空了，内容是：<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>字典的全部key是dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'小红'</span>, <span class="token string">'小美'</span>, <span class="token string">'小刚'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token number">1</span>.字典的key是：小红<span class="token number">1</span>.字典的value是：99<span class="token number">1</span>.字典的key是：小美<span class="token number">1</span>.字典的value是：66<span class="token number">1</span>.字典的key是：小刚<span class="token number">1</span>.字典的value是：77<span class="token number">2</span>.字典的key是：小红<span class="token number">2</span>.字典的value是：99<span class="token number">2</span>.字典的key是：小美<span class="token number">2</span>.字典的value是：66<span class="token number">2</span>.字典的key是：小刚<span class="token number">2</span>.字典的value是：77<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>练习：<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-02_20-48-51.png">   </p><p>练习答案：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 组织字典记录数据</span>info_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"王力鸿"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"部门"</span><span class="token punctuation">:</span> <span class="token string">"科技部"</span><span class="token punctuation">,</span>        <span class="token string">"工资"</span><span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        <span class="token string">"级别"</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"周杰轮"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"部门"</span><span class="token punctuation">:</span> <span class="token string">"市场部"</span><span class="token punctuation">,</span>        <span class="token string">"工资"</span><span class="token punctuation">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>        <span class="token string">"级别"</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"林俊节"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"部门"</span><span class="token punctuation">:</span> <span class="token string">"市场部"</span><span class="token punctuation">,</span>        <span class="token string">"工资"</span><span class="token punctuation">:</span> <span class="token number">7000</span><span class="token punctuation">,</span>        <span class="token string">"级别"</span><span class="token punctuation">:</span> <span class="token number">3</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"张学油"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"部门"</span><span class="token punctuation">:</span> <span class="token string">"科技部"</span><span class="token punctuation">,</span>        <span class="token string">"工资"</span><span class="token punctuation">:</span> <span class="token number">4000</span><span class="token punctuation">,</span>        <span class="token string">"级别"</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"刘德滑"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"部门"</span><span class="token punctuation">:</span> <span class="token string">"市场部"</span><span class="token punctuation">,</span>        <span class="token string">"工资"</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">,</span>        <span class="token string">"级别"</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"员工在升级加薪前的结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>info_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># for循环遍历字典</span><span class="token keyword">for</span> name <span class="token keyword">in</span> info_dict<span class="token punctuation">:</span>    <span class="token comment"># if条件判断符合条件的员工</span>    <span class="token keyword">if</span> info_dict<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"级别"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token comment"># 升职加薪</span>        <span class="token comment"># 获取员工的信息几点</span>        employee_info_dict <span class="token operator">=</span> info_dict<span class="token punctuation">[</span>name<span class="token punctuation">]</span>        <span class="token comment"># 修改员工信息</span>        employee_info_dict<span class="token punctuation">[</span><span class="token string">"级别"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>    <span class="token comment"># 级别+1</span>        employee_info_dict<span class="token punctuation">[</span><span class="token string">"工资"</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1000</span>    <span class="token comment"># 工资+1000</span>        <span class="token comment"># 将员工的信息更新回info_dict</span>        info_dict<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> employee_info_dict<span class="token comment"># 输出结果</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"对员工进行升级加薪后的结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>info_dict<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">员工在升级加薪前的结果是：<span class="token punctuation">&#123;</span><span class="token string">'王力鸿'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'科技部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">3000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span>, <span class="token string">'周杰轮'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">5000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>, <span class="token string">'林俊节'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">7000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>, <span class="token string">'张学油'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'科技部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">4000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span>, <span class="token string">'刘德滑'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">6000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>对员工进行升级加薪后的结果是：<span class="token punctuation">&#123;</span><span class="token string">'王力鸿'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'科技部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">4000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>, <span class="token string">'周杰轮'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">5000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>, <span class="token string">'林俊节'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">7000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>, <span class="token string">'张学油'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'科技部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">5000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>, <span class="token string">'刘德滑'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">'部门'</span><span class="token builtin class-name">:</span> <span class="token string">'市场部'</span>, <span class="token string">'工资'</span><span class="token builtin class-name">:</span> <span class="token number">6000</span>, <span class="token string">'级别'</span><span class="token builtin class-name">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-02_21-08-19.png"> </p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-02_21-10-01.png"> </p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-08-02_21-14-08.png"> </p><p>附录：<br>字符串比较是一位位按照ASCII码表进行比较的。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python07</title>
      <link href="/2023/06/07/python07/"/>
      <url>/2023/06/07/python07/</url>
      
        <content type="html"><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数是组织好的，可重复使用，用来实现特定功能的代码段。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Hello"</span>length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为什么随时都可以使用len()统计长度？<br>因为，len()是Python内置的函数：</p><ul><li>是提前写好的</li><li>可以重复使用</li><li>实现统计长度这一特定功能的代码段</li></ul><p>我们使用过的input()、print()、int()等都是Python的内置函数。</p><p>需求：不使用系统内置函数，统计字符串长度。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">str1 <span class="token operator">=</span> <span class="token string">"Python"</span>str2 <span class="token operator">=</span> <span class="token string">"Number one"</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>    count <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字符串</span><span class="token interpolation"><span class="token punctuation">&#123;</span>str1<span class="token punctuation">&#125;</span></span><span class="token string">的长度是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> str2<span class="token punctuation">:</span>    count <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字符串</span><span class="token interpolation"><span class="token punctuation">&#123;</span>str2<span class="token punctuation">&#125;</span></span><span class="token string">的长度是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">字符串Python的长度是：6字符串Number one的长度是：10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是这样的代码重复严重，所以可以使用函数优化代码，如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">str1 <span class="token operator">=</span> <span class="token string">"Python"</span>str2 <span class="token operator">=</span> <span class="token string">"Number one"</span><span class="token keyword">def</span> <span class="token function">my_len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字符串</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">的长度是</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>my_len<span class="token punctuation">(</span>str1<span class="token punctuation">)</span>my_len<span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">字符串Python的长度是6字符串Number one的长度是10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>为什么要学习、使用函数呢？<br>为了得到一个针对特定需求、可供重复利用的代码段，提高程序的复用性，减少重复性代码，提高开发效率。</p><p>函数的定义：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span>传入参数<span class="token punctuation">)</span><span class="token punctuation">:</span>    函数体    <span class="token keyword">return</span> 返回值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>无参案例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">say_hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"欢迎光临\n这边请！"</span><span class="token punctuation">)</span>say_hi<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">欢迎光临这边请<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有参案例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> x <span class="token operator">+</span> y    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">&#125;</span></span><span class="token string"> + </span><span class="token interpolation"><span class="token punctuation">&#123;</span>y<span class="token punctuation">&#125;</span></span><span class="token string">的计算结果是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">5</span> + <span class="token number">6</span>的计算结果是：11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在函数定义中，提供的x和y,称之为：形式参数（形参），表示函数声明将要使用2个参数。函数调用中，提供的5和6，称之为：实际参数（实参），表示函数执行时真正使用的参数值，传入时，按照顺序传入数据，使用逗号分隔。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请配合测量体温！"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> num <span class="token operator">&lt;=</span> <span class="token number">37.5</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"体温测量中，您的体温是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>num<span class="token punctuation">&#125;</span></span><span class="token string">度，体温正常请进！"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"体温测量中，您的体温是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>num<span class="token punctuation">&#125;</span></span><span class="token string">度，需要隔离！"</span></span><span class="token punctuation">)</span>        check<span class="token punctuation">(</span><span class="token number">37.3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">请配合测量体温！体温测量中，您的体温是：37.3度，体温正常请进！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>函数的返回值</p><pre class="line-numbers language-none"><code class="language-none">def 函数(参数...):    函数体    return 返回值变量 &#x3D; 函数(参数...)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> a <span class="token operator">+</span> b    <span class="token keyword">return</span> resultr <span class="token operator">=</span> add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>什么是函数的嵌套调用<br>所谓函数的嵌套调用是指在一个函数里面又调用了另外一个函数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func_b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---2---"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">func_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---1---"</span><span class="token punctuation">)</span>    func_b<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---3---"</span><span class="token punctuation">)</span>func_a<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---1------2------3---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行流程：函数A中执行到调用函数B的语句，会将函数B全部执行完成后，继续执行函数A的剩余内容</p><p>变量作用域指的是变量的作用范围（变量在哪里可用，在哪里不可用）<br>主要分为两类：局部变量和全局变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token number">100</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>testA<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span><span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># 报错：name 'num' is not defined.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>局部变量的作用：在函数体内部，临时保存数据，即当函数调用完成后，则销毁局部变量。</p><p>所谓全局变量，指的是在函数体内、外都能生效的变量。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">def</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">testB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>testA<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span>testB<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在函数体内可以修改全局变量吗？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">200</span><span class="token keyword">def</span> <span class="token function">test_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">test_b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token number">500</span> <span class="token comment"># 变成了局部变量，和外部的没有任何联系</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>test_a<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span>test_b<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span><span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以使用global关键字</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">200</span><span class="token keyword">def</span> <span class="token function">test_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">test_b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># global 关键字，在函数内声明变量为全局变量</span>    <span class="token keyword">global</span> num    num <span class="token operator">=</span> <span class="token number">500</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>test_a<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span>test_b<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 100</span><span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">200</span><span class="token number">500</span><span class="token number">500</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础</title>
      <link href="/2023/06/06/gao-yi-shang/"/>
      <url>/2023/06/06/gao-yi-shang/</url>
      
        <content type="html"><![CDATA[<h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li><p>1946年，世界上第一台真正有意义的电子计算机（ENIAC）在美国诞生。</p></li><li><p>计算机的发展阶段：</p></li></ul><table><thead><tr><th>发展阶段</th><th>核心电子元器件</th><th>主要软件</th><th>主要应用领域</th></tr></thead><tbody><tr><td>第一阶段（1946-1958）</td><td>电子管</td><td>机器语言、汇编语言</td><td>军事与科研</td></tr><tr><td>第二阶段（1959-1964）</td><td>晶体管</td><td>高级语言、操作系统</td><td>数据处理和事务处理</td></tr><tr><td>第三阶段（1965-1970）</td><td>中、小规模集成电路</td><td>多种高级语言、完善的操作系统</td><td>科学计算、数据处理及过程控制</td></tr><tr><td>第四阶段（1971年至今）</td><td>大规模、超大规模集成电路</td><td>数据库管理系统、网络操作系统、各种应用软件及系统</td><td>人工智能、数据通信及社会的各领域</td></tr></tbody></table><ul><li>软件分为<strong>系统软件</strong>和<strong>应用软件</strong></li></ul><blockquote><p>系统软件</p></blockquote><p>系统软件是负责管理计算机系统中各种独立的硬件，使得它们可以协调工作。系统软件使得计算机使用者和其他软件将计算机当作一个整体而不需要顾及到底层每个硬件是如何工作的。<br>一般来讲，系统软件包括操作系统和一系列基本的工具（比如编译器，数据库管理，存储器格式化，文件系统管理，用户身份验证，驱动管理，网络连接等方面的工具）。<br>具体包括以下四类：<br>1、操作系统；<br>2、语言程序，如汇编程序、编译程序、解释程序；<br>3、各种服务性程序，如诊断程序、排错程序、练习程序等；<br>4、数据库管理系统。</p><blockquote><p>应用软件</p></blockquote><p>应用软件是为了某种特定的用途而被开发的软件。可以是一个特定的程序，比如一个图像浏览器。也可以是一组功能联系紧密，可以互相协作的程序的集合，比如微软的Office软件。也可是一个由众多独立程序组成的庞大的软件系统，比如数据库管理系统。<br>较常见的有：<br><strong>文字处理软件</strong>如WPS、Word等<br><strong>信息管理软件</strong><br><strong>辅助设计软件</strong>如AutoCAD<br><strong>实时控制软件</strong>如极域电子教室等<br><strong>教育与娱乐软件</strong></p><ul><li><p>信息资源：包括文本、图形图像、音视频等有价值的数据。</p></li><li><p>计算机主要硬件：</p><p>一.主机<br>1.CPU（中央处理器）</p><p>CPU即中央处理器，主要功能是进行算数和逻辑运算。CPU想当于计算机的大脑，是一块超大规模的集成电路，主要包括运算器和控制器两大部分。</p><p>⑴CPU两大厂商：Intel和AMD</p><p> CPU系列中Intel公司的产品有酷睿i3、i5、i7、i9系列、奔腾双核、赛场等型号；AMD公司的产品有FX系列、翼龙II双核系列、速龙双核系列等型号。双核处理器是指在一个处理器上集成两个运算核心，从而提高计算能力。四核处理器是指在一个处理器上拥有四个功能一样的处理器核心。</p><p>⑵CPU接口方式：触点式、针脚式</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/caa30ac476714aedb19ad82040b1c466.png" alt="img"></p><p> ⒉硬盘</p><p>硬盘属于外部存储器，机械硬盘由金属磁片制成，而磁片有记忆功能，所以存储到磁片上的数据，不论在开机还是关机时都不会丢失。硬盘容量很大。一般把需要永久保存的数据（如系统文件、数据文件等）存放在硬盘上。</p><p>⑴硬盘常见的接口类型有：IDE、SATA</p><p>⑵硬盘的两种类型：机械硬盘、固态硬盘</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/36de8ebe990449a39892314e217e808e.png" alt="img"></p><p>3.内存</p><p>内存又称内部存储器（RAM），构造及技术主要有内存芯片、金手指、印制电路板（PCB）、贴片电容、封装技术等。内存属于电子式存储设备，由电路板和芯片组成，特点是体积小、速度快、有电可存、无电清空，即计算机在开机状态时内存中可存储数据，关机后将自动清空其中的所有数据。</p><p>内存条主要有SDRAM（同步动态随机存储器）、DDR、DDR2、DDR3、DDR4等类型。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/c1fb82a6e7464db0a956198229a413a8.png" alt="img"></p><p>4.机箱</p><p>⑴机箱的作用：①机箱是计算机的主体框架和外衣；②起到固定计算机内部的作用；③防尘；④防静电；⑤防外力破坏</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/8af4aa30629e4831a32c5cfcac9b2ebc.png" alt="img"></p><p>⒌主板</p><p>主板是计算机连接各个硬件的载体。主板一般为矩形电路板，上面安装了组成计算机的主要电路系统，一般有BIOS芯片、I&#x2F;O控制芯片、键盘和面板控制开关接口、指示灯插接件、扩充插槽、主板及插卡的直流电源供电接插件等元件。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/8115e5d5995e4d57bbc70cb840d507ab.png" alt="img"></p><p>​                        </p><p>⒍显卡</p><p>显卡主要由显示芯片、显存、数模转换器、主板的接口等几部分组成。显卡是连接显示器和个人计算机主板的重要组件，是“人机对话”的中间桥梁。</p><p>⑴显卡的接口方式：AGP、PCI-E</p><p>⑵显卡的作用：将计算机系统需要显示的信息进行转换驱动显示器，并向显示器提供逐行或隔行扫描信号，控制显示器的正确显示。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/e4966faa3f204f09b0fde4d0b9c022d3.png" alt="img"></p><p>⒎声卡</p></li></ul><p>声卡是计算机多媒体系统中最基本的组成部分。</p><p>⑴声卡的作用：当发出播放命令后，实现声波&#x2F;数字信号相互转换。</p><p>⑵声卡的两种类型：内置独立声卡、内置集成在主板上的软声卡</p><p>二.输入输出设备<br>  ⒈输入设备（键盘、鼠标）</p><p>  键盘和鼠标接口有PS&#x2F;2和USB接口。</p><p>  计算机中PS&#x2F;2的键盘、鼠标等硬件一般不支持带电插拔功能，带电插拔时瞬间电流过大，可能会损坏主板；而有时主板上某个电路或元器件能自动形成保护，导致计算机黑屏、主板不过电等现象，一般对主板上的硬件进行插拔后便可以正常工作了。</p><p>  ⑴键盘</p><p>  键盘是主要的人工学输入设备，通常为101键或104键。</p><p>  ①键盘的作用：输入文字、数字等内容到计算机中，以实现计算机的操控</p><p>  ⑵鼠标</p><p>  ①硬件鼠标分为两种：激光鼠标、机械鼠标</p><p>  a.机械鼠标</p><p>  机械鼠标价格低、精度低、寿命短，并且容易出现光标无故乱动，移动不灵活等机械故障</p><p>  b.激光鼠标</p><p>  激光鼠标精度高、可靠性好，工作时要求接触面必须精密配合广元照射角，否则无法工作</p><p>  ⒉输出设备（音响、打印机、扫描仪、显示器等）</p><p>  ⑴显示器</p><p>显示器又被称为电脑监视器、电脑屏幕，是电脑的一个重要组成部件。</p><p>①显示器的分类：CRT（阴极射线管）、LCD（液晶显示屏）、LED（发光二极管）</p><p>⑵音响</p><p>音响电器设备组合发出声音的一套音频系统。音响技术的发展历史可以分为电子管、晶体管、集成电路、场效应管四个阶段。</p><p>⑶打印机</p><p>①打印机的作用：用于将计算机处理结果打印在纸上</p><p>②打印机的种类</p><p>a.按打印元件对纸是否有击打动作分为：击打式打印机、非击打式打印机</p><p>b.按打印字符结构分为：全形字打印机、点阵字符打印机</p><p>c.按一行字在纸上形成的方式分为：串式打印机、行式打印机</p><p>d.按所采用的技术分为：柱形、球形、喷墨式、热敏式、激光式、静电式、磁式、发光二极管式等打印机</p><p>⑷扫描仪</p><p>扫描仪是一种捕获影像的装置，作为一种光机电一体化的电脑外设产品。 </p><p>①扫描仪的作用：可将影像转换为计算机可以显示、编辑、存储和输出的数字格式</p><ul><li><p>计算机主要部件：运算器、控制器、存储器、输入设备、输出设备。（这个结构最早由冯·诺依曼提出，他被成为计算机之父）</p></li><li><p>图灵测试是一种测试机器是不是具备<a href="https://baike.baidu.com/item/%E4%BA%BA%E7%B1%BB%E6%99%BA%E8%83%BD/2287229?fromModule=lemma_inlink">人类智能</a>的方法。被测试的有一个人，另一个是声称自己有人类智力的机器。</p></li><li><p>进制转换（……）</p></li><li><p>各种编码</p><ol start="0"><li>编码的作用<br>文字或者数据存储在计算机内是二进制的方式。<br>但是同样一个文字或者字符 存储的二进制数值是多少，就能编码有关。</li></ol><p>比如 甲 把 字符 A 存在电脑里 是 001<br>但是 乙 把 字符 A 存在电脑里 是 011</p><p>这样就带来一个问题，同样是 字符A，每个人都按照自己的心情来决定 对应的二进制编码。</p><ol><li>方便和统一管理</li></ol><p>所以为了方便和统一管理，这个时候就有一套规范，大家都遵守，比如这套规范定义 字符A 是以 <code>111</code> 存放在电脑里，而且是唯一的一个编号。</p><p>ASCII编码，英文存储到计算机里面</p><p><a href="https://tool.oschina.net/commons?type=4">ASCII编码表</a></p><table><thead><tr><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th><th align="left">ASCII值</th><th align="left">控制字符</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">NUT</td><td align="left">32</td><td align="left">(space)</td><td align="left">64</td><td align="left">@</td><td align="left">96</td><td align="left">、</td></tr><tr><td align="left">1</td><td align="left">SOH</td><td align="left">33</td><td align="left">!</td><td align="left">65</td><td align="left">A</td><td align="left">97</td><td align="left">a</td></tr><tr><td align="left">2</td><td align="left">STX</td><td align="left">34</td><td align="left">“</td><td align="left">66</td><td align="left">B</td><td align="left">98</td><td align="left">b</td></tr><tr><td align="left">3</td><td align="left">ETX</td><td align="left">35</td><td align="left">#</td><td align="left">67</td><td align="left">C</td><td align="left">99</td><td align="left">c</td></tr><tr><td align="left">4</td><td align="left">EOT</td><td align="left">36</td><td align="left">$</td><td align="left">68</td><td align="left">D</td><td align="left">100</td><td align="left">d</td></tr><tr><td align="left">5</td><td align="left">ENQ</td><td align="left">37</td><td align="left">%</td><td align="left">69</td><td align="left">E</td><td align="left">101</td><td align="left">e</td></tr><tr><td align="left">6</td><td align="left">ACK</td><td align="left">38</td><td align="left">&amp;</td><td align="left">70</td><td align="left">F</td><td align="left">102</td><td align="left">f</td></tr><tr><td align="left">7</td><td align="left">BEL</td><td align="left">39</td><td align="left">,</td><td align="left">71</td><td align="left">G</td><td align="left">103</td><td align="left">g</td></tr><tr><td align="left">8</td><td align="left">BS</td><td align="left">40</td><td align="left">(</td><td align="left">72</td><td align="left">H</td><td align="left">104</td><td align="left">h</td></tr><tr><td align="left">9</td><td align="left">HT</td><td align="left">41</td><td align="left">)</td><td align="left">73</td><td align="left">I</td><td align="left">105</td><td align="left">i</td></tr><tr><td align="left">10</td><td align="left">LF</td><td align="left">42</td><td align="left">*</td><td align="left">74</td><td align="left">J</td><td align="left">106</td><td align="left">j</td></tr><tr><td align="left">11</td><td align="left">VT</td><td align="left">43</td><td align="left">+</td><td align="left">75</td><td align="left">K</td><td align="left">107</td><td align="left">k</td></tr><tr><td align="left">12</td><td align="left">FF</td><td align="left">44</td><td align="left">,</td><td align="left">76</td><td align="left">L</td><td align="left">108</td><td align="left">l</td></tr><tr><td align="left">13</td><td align="left">CR</td><td align="left">45</td><td align="left">-</td><td align="left">77</td><td align="left">M</td><td align="left">109</td><td align="left">m</td></tr><tr><td align="left">14</td><td align="left">SO</td><td align="left">46</td><td align="left">.</td><td align="left">78</td><td align="left">N</td><td align="left">110</td><td align="left">n</td></tr><tr><td align="left">15</td><td align="left">SI</td><td align="left">47</td><td align="left">&#x2F;</td><td align="left">79</td><td align="left">O</td><td align="left">111</td><td align="left">o</td></tr><tr><td align="left">16</td><td align="left">DLE</td><td align="left">48</td><td align="left">0</td><td align="left">80</td><td align="left">P</td><td align="left">112</td><td align="left">p</td></tr><tr><td align="left">17</td><td align="left">DCI</td><td align="left">49</td><td align="left">1</td><td align="left">81</td><td align="left">Q</td><td align="left">113</td><td align="left">q</td></tr><tr><td align="left">18</td><td align="left">DC2</td><td align="left">50</td><td align="left">2</td><td align="left">82</td><td align="left">R</td><td align="left">114</td><td align="left">r</td></tr><tr><td align="left">19</td><td align="left">DC3</td><td align="left">51</td><td align="left">3</td><td align="left">83</td><td align="left">S</td><td align="left">115</td><td align="left">s</td></tr><tr><td align="left">20</td><td align="left">DC4</td><td align="left">52</td><td align="left">4</td><td align="left">84</td><td align="left">T</td><td align="left">116</td><td align="left">t</td></tr><tr><td align="left">21</td><td align="left">NAK</td><td align="left">53</td><td align="left">5</td><td align="left">85</td><td align="left">U</td><td align="left">117</td><td align="left">u</td></tr><tr><td align="left">22</td><td align="left">SYN</td><td align="left">54</td><td align="left">6</td><td align="left">86</td><td align="left">V</td><td align="left">118</td><td align="left">v</td></tr><tr><td align="left">23</td><td align="left">TB</td><td align="left">55</td><td align="left">7</td><td align="left">87</td><td align="left">W</td><td align="left">119</td><td align="left">w</td></tr><tr><td align="left">24</td><td align="left">CAN</td><td align="left">56</td><td align="left">8</td><td align="left">88</td><td align="left">X</td><td align="left">120</td><td align="left">x</td></tr><tr><td align="left">25</td><td align="left">EM</td><td align="left">57</td><td align="left">9</td><td align="left">89</td><td align="left">Y</td><td align="left">121</td><td align="left">y</td></tr><tr><td align="left">26</td><td align="left">SUB</td><td align="left">58</td><td align="left">:</td><td align="left">90</td><td align="left">Z</td><td align="left">122</td><td align="left">z</td></tr><tr><td align="left">27</td><td align="left">ESC</td><td align="left">59</td><td align="left">;</td><td align="left">91</td><td align="left">[</td><td align="left">123</td><td align="left">{</td></tr><tr><td align="left">28</td><td align="left">FS</td><td align="left">60</td><td align="left">&lt;</td><td align="left">92</td><td align="left">\</td><td align="left">124</td><td align="left">|</td></tr><tr><td align="left">29</td><td align="left">GS</td><td align="left">61</td><td align="left">&#x3D;</td><td align="left">93</td><td align="left">]</td><td align="left">125</td><td align="left">}</td></tr><tr><td align="left">30</td><td align="left">RS</td><td align="left">62</td><td align="left">&gt;</td><td align="left">94</td><td align="left">^</td><td align="left">126</td><td align="left">&#96;</td></tr><tr><td align="left">31</td><td align="left">US</td><td align="left">63</td><td align="left">?</td><td align="left">95</td><td align="left">_</td><td align="left">127</td><td align="left">DEL</td></tr></tbody></table><ol start="3"><li>Unicode字符集，将全世界的文字存储到计算机<br>各个国家的编码方式都有自己国家的标准，一旦出了国，就需要各种转换，这个感觉有点像中国人说中文，英国人说英语一样，有没有可能大家都说同一门语言呢？</li></ol><p>编码也是一样的，为什么不能有一套标准规范，大家都遵守呢？</p><p>就在这种呼吁下，Unicode 诞生了。Unicode 也称为统一码、万国码；看名字就知道，Unicode 希望统一所有国家的字符编码。</p><p>例如上面 的汉字 中 的 Unicode 编码 是 4E2D<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/20210317144556773.png" alt="img"></p><p>其中，<strong>UTF-8</strong>是Unicode中的一种可变长度字符编码。</p></li><li><p>存储容量：</p><p>字节（Byte, 简写为B），是信息技术设备中用于计量存储容量的基本单位。1字节可以存储8位二进制。</p><p>1KB&#x3D;1024B1MB&#x3D;1024KB1GB&#x3D;1024MB</p></li><li><p>常见接口类型</p><p>一、VGA接口知识<br>VGA（Video Graphics Array）接口（即D-Sub接口）,接口为D字型，VGA接口是一种D型接口，上面共有15针孔，分成三排，每排五个。 其中，除了2根NC（Not Connect)信号、3根显示数据总线和5个GND信号，比较重要的是3根RGB彩色分量信号和2根扫描同步信号HSYNC和VSYNC针用于传送模拟信号。</p><p>VGA有着成熟的制造工艺、较宽的使用范围，它是模拟信号传输中最常见到的一种端口，占据了所有显示器、电视和投影机等产品必配备的接口份额，因此它的受众面非常广泛，拥有绝大部分视频设备的支持。</p><p>VGA接口是显卡上应用最为广泛的接口类型，多数的显卡都带有此种接口。有些不带VGA接口而带有DVI(Digital Visual Interface数字视频接口）接口的显卡，也可以通过一个简单的转接头将DVI接口转成VGA接口，通常没有VGA接口的显卡会附赠这样的转接头。</p><p> <img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/67e3c680af794a25a18a822b6fd171c0.png" alt="img"></p><p>二、DVI接口知识<br>DVI(Digital Visual Interface数字视频接口）它是1999年由SILICon Image、Intel（英特尔）、Compaq（康柏）、IBM、HP（惠普）、NEC、Fujitsu（富士通）等公司共同组成DDWG（Digital Display Working Group，数字显示工作组）推出的接口标准。一种用于高速传输数字信号的技术，有DVI-A、DVI-D和DVI-I三种不同类型的接口形式。DVI-D只有数字接口，DVI-I有数字和模拟接口，应用主要以DVI-D(24+1)为主。</p><p>它是以Silicon Image公司的PanalLink接口技术为基础，基于TMDS（Transition Minimized Differential Signaling，最小化传输差分信号）电子协议作为基本电气连接。TMDS是一种微分信号机制，可以将像素数据编码，并通过串行连接传递。TMDS运用先进的编码算法把8bit数据(R、G、B中的每路基色信号)通过最小转换编码为10bit数据(包含行场同步信息、时钟信息、数据DE、纠错等)，经过DC平衡后，采用差分信号传输数据，它和LVDS、TTL相比有较好的电磁兼容性能，可以用低成本的专用电缆实现长距离、高质量的数字信号传输。显卡产生的数字信号由发送器按照TMDS协议编码后通过TMDS通道发送给接收器，经过解码送给数字显示设备。数字视频接口（DVI）是一种国际开放的接口标准，在PC、DVD、高清晰电视（HDTV）、高清晰投影仪等设备上有广泛的应用。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/8f0f54c65455b043ba505625c8805ef6.png" alt="img"></p><p>三、HDMI接口知识<br>高清多媒体接口（High Definition Multimedia Interface ），它是是一种数字化视频&#x2F;音频接口技术，是适合影像传输的专用型数字化接口，其可同时传送音频和影像信号，最高数据传输速度为18Gbps，同时无需在信号传送前进行数&#x2F;模或者模&#x2F;数转换。</p><p>通俗的说，HDMI是一种高清视频接口，在目前主流笔记本、液晶电视、显卡、主板中都比较常见。HDMI是一种数字化视频&#x2F;音频接口技术，是适合影像传输的专用型数字化接口，其可同时传送音频和影音信号，最高数据传输速度为5Gbps，可支持2K、1080P，720P的全高清格式视频输出，是目前最为流行的高清接口，这是普通的VGA显示接口所无法比拟的，犹如宽带中电话线宽带与光纤一样，传输数据能力区别很大。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/fffab823aa69656a30773219fb623ecf.png" alt="img"></p><p>四、DP接口知识</p><p>DP即DisplayPort，是一种高清数字显示接口标准，可以连接电脑和显示器，也可以连接连接电脑和家庭影院。2006年5月，视频电子标准协会（VESA）确定了1点0版标准，并在半年后升级到1点1版，提供了对HDCP的支持，2点0版也计划在今年推出；作为HDMI和UDI的竞争对手和DVI的潜在继任者，DisplayPort赢得了AMD、Intel、NVIDIA、戴尔、惠普、联想、飞利浦、三星等业界巨头的支持，而且它是免费使用的。</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/dcefdd0f114f011613d27d02e8a924aa.png" alt="img"></p><p>总结：</p><p>这四种显示接口，排名是DP》HDMI》DVI》VGA，其中最好的显示接口是DP，最差的就是VGA。DisplayPort一开始则面向液晶显示器开发，采用“Micro-Packet Architecture(微数据包架构)”传输架构，视频内容以数据包方式传送，这一点同DVI、HDMI等视频传输技术有着明显区别。也就是说，HDMI的出现取代模拟信号视频，而DisplayPort的出现则取代的是DVI和VGA接口。VGA是模拟信号，其它三个接口属于数字信号，VGA和DVI只支持视频传输，不支持音频传输，而HDMI和DP一根线可以同时传输视频和音频。</p></li><li><p>操作系统（OS）</p><ol><li>Windows:XP、win7、win10、win11</li><li>Linux：Deepin、CentOS、红帽、Ubuntu等</li><li>Unix:  Mac OS</li></ol></li><li><p>文件类型和扩展名</p><table><thead><tr><th>文件类型</th><th>扩展名</th><th>适合的操作系统类型</th></tr></thead><tbody><tr><td>纯文本类型</td><td>.txt</td><td>所有类型的操作系统</td></tr><tr><td>网页文件</td><td>.htm .html</td><td>所有类型的操作系统</td></tr><tr><td>图像文件</td><td>.jpg .jpeg .png .bmp .gif</td><td>所有类型的操作系统</td></tr><tr><td>音频文件</td><td>.wav .mp3 .wma .au</td><td>所有类型的操作系统</td></tr><tr><td>视频文件</td><td>.avi .mp4 .mkv.mpeg</td><td>所有类型的操作系统</td></tr><tr><td>可执行文件</td><td>.exe</td><td>Windows操作系统</td></tr><tr><td>可执行文件</td><td>.apk</td><td>Android操作系统</td></tr><tr><td>压缩文件</td><td>.zip .rar</td><td>Windows操作系统</td></tr></tbody></table></li><li><p>网络拓扑结构</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/image-88.png" alt="img"></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/image-89.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/image-90.png" alt="img"></p><ul><li><p>网络传输协议：OSI参考模型有7层，TCP&#x2F;IP协议有4层</p></li><li><p>IP地址（IPv4、IPv6）</p><p>IPv4由32位2进制组成，为了方便应用，每8位二进制为一组，转为对应的十进制，中间用“.”隔开，</p><p>如：<img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/20210622220137182.png" alt="img"></p><p>IPv6IPv4由128位2进制组成</p></li><li><p>域名系统（DNS）</p><p>DNS：Domain Name Service域名服务器</p><p>用户使用浏览器访问网页时，浏览器首先查找本地缓存，然后找本地解析文件，最后求助DNS服务器，DNS服务器放在公网即互联网上。</p><p>使用cmd命令—nslookup + 网址 可查询该网址的IP地址</p><p>示例：</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/20210224175152289.png" alt="在这里插入图片描述"></p><p>可使用该IP地址访问百度</p><p>​<img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/20210224175234247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NvbmcxMjNzaA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li></ul><p>顶级域名就是一级域名，比如 .com .org .cn<br>N级域名就是在N-1级域名前追加一级。<br>比如二级域名是在一级域名前加一级，</p><p>二级域名示例：<a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> <a href="http://zhihu.com/">http://zhihu.com</a> <a href="https://link.zhihu.com/?target=http://qq.com">http://qq.com</a></p><p>三级域名示例:   <a href="https://www.baidu.com/">https://www.baidu.com</a></p><ul><li><p>HTML: 超文本标记语言</p><p>URL: 统一资源定位符</p><p>HTTP: 超文本传输协议</p><p>www: 万维网</p><p>B&#x2F;S: 浏览器&#x2F;服务器工作模式</p></li><li><p>网络设备</p><p>交换机用于组建局域网，路由器用于连接内网和外网</p><p>局域网：一般称为内网</p><p>简单局域网的构成：交换机、网线、PC（其他IT终端）</p><p>交换机：用来组建内网的局域网的设备</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/20210224175004880.jpg" alt="在这里插入图片描述"></p><ul><li><p>模拟信号是指用连续变化的物理量表示的信息，数字信号指自变量是离散的、因变量也是离散的信号</p><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/f0e779c47e57400fbe6b837c957d5f87.png"></p></li><li><p>电子邮件（E-mail）</p><p>格式为“用户名@域名.域名后缀”，如”<a href="mailto:&#x31;&#x33;&#x31;&#48;&#x32;&#51;&#53;&#x39;&#55;&#x30;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#109;">&#x31;&#x33;&#x31;&#48;&#x32;&#51;&#53;&#x39;&#55;&#x30;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#109;</a>“、“<a href="mailto:&#x74;&#x61;&#107;&#111;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;">&#x74;&#x61;&#107;&#111;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a>”</p></li><li><p>即时通信（IM）,允许使用网络进行各类信息交流。如QQ、微信、钉钉等</p></li><li><p>物联网（简称IoT）</p><p>完整的物联网系统有四个不同的元素: 传感器或设备、连接、数据处理和用户界面。</p><p>物联网应用，有大量的物联网应用。一些最着名的包括：</p><p>可穿戴设备</p><p>对于日常用户来说，可穿戴设备可能是物联网最明显的方面。这些包括健身追踪器，智能手表，智能眼镜，虚拟现实耳机等。</p><p>智能家居</p><p>智能家居系统与电器连接以自动执行特定任务，并且通常是远程控制的。智能家居中的示例物联网设备可能包括无线厨房用具、情绪感应音乐系统、智能照明、电动百叶窗、自动门窗、智能公用事业仪表等。</p><p>智慧城市</p><p>智慧城市使用物联网设备（如连接的传感器和仪表）来收集和分析数据。此数据可用于改进基础结构、公共设施和服务。</p><p>自动驾驶汽车</p><p>自动驾驶汽车通常具有基于物联网的技术系统，该系统共享有关车辆本身以及行驶道路的信息。有关交通，导航，外部环境等的数据由汽车的计算机系统收集和分析，使其能够自行驾驶。</p><p>零售</p><p>物联网越来越多地用于零售业。例如，想想自动结账，个性化折扣，智能货架（在零售商缺货时提醒零售商），机器人员工和优化的供应链管理。亚马逊Go-亚马逊的概念店-是物联网弥合在线与实体店之间差距的一个例子。这些商店是无现金的，因为钱是从客户的亚马逊钱包中扣除的。当他们从货架上拣选产品时，他们还实时将商品添加到客户的购物车中。 </p><p>远程医疗</p><p>远程医疗 - 有时称为远程医疗 - 是指通过技术提供卫生服务。物联网是远程医疗的一个重要方面（首字母缩略词IoMT有时用于指代医疗物联网）。示例包括远程医疗诊断，医学成像的数字通信，与专家的视频咨询等。</p><p>智能农业</p><p>智能农业涉及使用数字技术来改善农业工作。例如，农民可以使用连接的传感器，摄像头和其他设备来改善农场的整体视图，并调整运营以提高产量。</p><p>此列表并非详尽无遗 - 在多个行业中，物联网正在改变运营和工作方式。物联网设备示例包括智能手机，智能冰箱，智能手表，健身追踪器，智能火灾报警器，智能门锁，智能自行车，医疗传感器，健身追踪器，智能安全系统，以及Alexa和Google Home等虚拟助手 - 名单还在继续。</p></li><li><p>物联网感知层技术</p><p>物联网层次结构分为三层，自下向上依次是：感知层、网络层、应用层。感知层位于物联网三层结构中的最底层，其功能为“感知”，即通过传感网络获取环境信息。<strong>感知层是物联网的核心，是信息采集的关键部分。</strong></p><p><strong>传感器技术</strong></p><p>传感器是物联网中获得信息的主要设备，它最大作用是帮助人们完成对物品的自动检测和自动控制。目前，传感器的相关技术已经相对成熟，常见的传感器包括温度、湿度、压力、光电传感器等。作为一种检测装置，传感器会先感知外界信息，然后将这些信息通过特定规则转换为电信号，最后由传感网传输到计算机上，供人们或人工智能分析和利用。</p><p><strong>射频识别技术</strong></p><p>射频识别（RFID，Radio Frequency Identification），又称为电子标签技术，该技术是无线非接触式的自动识别技术。可以通过无线电讯号识别特定目标并读写相关数据。它主要用来为物联网中的各物品建立唯一的身份标示。应用：1、门禁卡（身份识别）2、货物管理3、电子车牌（身份识别）4、基于 RFID 的 ETC 收费系统。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python06</title>
      <link href="/2023/05/28/python06/"/>
      <url>/2023/05/28/python06/</url>
      
        <content type="html"><![CDATA[<h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"HelloWorld"</span><span class="token keyword">for</span> x <span class="token keyword">in</span> name<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">HelloWorld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：统计句子: Cool as the wind, wild as a dog, no one tube, but also free. 中a出现的次数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Cool as the wind, wild as a dog, no one tube, but also free."</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> x <span class="token keyword">in</span> name<span class="token punctuation">:</span>    <span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token string">'a'</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"字符串中总共有</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">个a"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">字符串中总共有4个a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="range语句"><a href="#range语句" class="headerlink" title="range语句"></a>range语句</h3><p>for 临时变量 in 待处理数据集：<br>    循环满足条件时执行的代码<br>语句中：待处理数据集，严格来说，称之为：序列类型，序列类型指，其内容可以一个个依次取出的一种类型，包括：  </p><ul><li>字符串</li><li>列表</li><li>元组</li><li>等</li></ul><p>range语句，可以帮助我们生成序列类型。</p><ul><li>语法1：range(num),获取从0开始，到num结束（不包括num）的数字序列。</li><li>语法2：range(num1,num2),从num1开始，取到不包括num2的序列</li><li>语法3：range(num1,num2,step)<br>从num1开始，到num2(不包括)，步长为step的序列，step不填，默认是1<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">0</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>练习1：使用range(),获取从1到100的序列，使用for循环遍历它。在遍历的过程中，统计有多少偶数出现。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 统计从1-100这100个数中偶数的个数</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"1-100中偶数出现</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">次"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>-100中偶数出现50次<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>使用for循环表白<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 坚持表白100天，每天都送10多花</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"今天是向小美表白的第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">天，加油！"</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"给小美送的第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">朵玫瑰花"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"小美我喜欢你"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">天，表白成功"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">今天是向小美表白的第1天，加油！给小美送的第1朵玫瑰花给小美送的第2朵玫瑰花给小美送的第3朵玫瑰花给小美送的第4朵玫瑰花给小美送的第5朵玫瑰花给小美送的第6朵玫瑰花给小美送的第7朵玫瑰花给小美送的第8朵玫瑰花给小美送的第9朵玫瑰花给小美送的第10朵玫瑰花小美我喜欢你<span class="token punctuation">..</span>.<span class="token punctuation">..</span>.<span class="token punctuation">..</span>.今天是向小美表白的第100天，加油！给小美送的第1朵玫瑰花给小美送的第2朵玫瑰花给小美送的第3朵玫瑰花给小美送的第4朵玫瑰花给小美送的第5朵玫瑰花给小美送的第6朵玫瑰花给小美送的第7朵玫瑰花给小美送的第8朵玫瑰花给小美送的第9朵玫瑰花给小美送的第10朵玫瑰花小美我喜欢你第100天，表白成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>99乘法表案例：<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token operator">*</span>i<span class="token punctuation">&#125;</span></span><span class="token string">\t"</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>*1<span class="token operator">=</span><span class="token number">1</span><span class="token number">1</span>*2<span class="token operator">=</span><span class="token number">2</span><span class="token number">2</span>*2<span class="token operator">=</span><span class="token number">4</span><span class="token number">1</span>*3<span class="token operator">=</span><span class="token number">3</span><span class="token number">2</span>*3<span class="token operator">=</span><span class="token number">6</span><span class="token number">3</span>*3<span class="token operator">=</span><span class="token number">9</span><span class="token number">1</span>*4<span class="token operator">=</span><span class="token number">4</span><span class="token number">2</span>*4<span class="token operator">=</span><span class="token number">8</span><span class="token number">3</span>*4<span class="token operator">=</span><span class="token number">12</span><span class="token number">4</span>*4<span class="token operator">=</span><span class="token number">16</span><span class="token number">1</span>*5<span class="token operator">=</span><span class="token number">5</span><span class="token number">2</span>*5<span class="token operator">=</span><span class="token number">10</span><span class="token number">3</span>*5<span class="token operator">=</span><span class="token number">15</span><span class="token number">4</span>*5<span class="token operator">=</span><span class="token number">20</span><span class="token number">5</span>*5<span class="token operator">=</span><span class="token number">25</span><span class="token number">1</span>*6<span class="token operator">=</span><span class="token number">6</span><span class="token number">2</span>*6<span class="token operator">=</span><span class="token number">12</span><span class="token number">3</span>*6<span class="token operator">=</span><span class="token number">18</span><span class="token number">4</span>*6<span class="token operator">=</span><span class="token number">24</span><span class="token number">5</span>*6<span class="token operator">=</span><span class="token number">30</span><span class="token number">6</span>*6<span class="token operator">=</span><span class="token number">36</span><span class="token number">1</span>*7<span class="token operator">=</span><span class="token number">7</span><span class="token number">2</span>*7<span class="token operator">=</span><span class="token number">14</span><span class="token number">3</span>*7<span class="token operator">=</span><span class="token number">21</span><span class="token number">4</span>*7<span class="token operator">=</span><span class="token number">28</span><span class="token number">5</span>*7<span class="token operator">=</span><span class="token number">35</span><span class="token number">6</span>*7<span class="token operator">=</span><span class="token number">42</span><span class="token number">7</span>*7<span class="token operator">=</span><span class="token number">49</span><span class="token number">1</span>*8<span class="token operator">=</span><span class="token number">8</span><span class="token number">2</span>*8<span class="token operator">=</span><span class="token number">16</span><span class="token number">3</span>*8<span class="token operator">=</span><span class="token number">24</span><span class="token number">4</span>*8<span class="token operator">=</span><span class="token number">32</span><span class="token number">5</span>*8<span class="token operator">=</span><span class="token number">40</span><span class="token number">6</span>*8<span class="token operator">=</span><span class="token number">48</span><span class="token number">7</span>*8<span class="token operator">=</span><span class="token number">56</span><span class="token number">8</span>*8<span class="token operator">=</span><span class="token number">64</span><span class="token number">1</span>*9<span class="token operator">=</span><span class="token number">9</span><span class="token number">2</span>*9<span class="token operator">=</span><span class="token number">18</span><span class="token number">3</span>*9<span class="token operator">=</span><span class="token number">27</span><span class="token number">4</span>*9<span class="token operator">=</span><span class="token number">36</span><span class="token number">5</span>*9<span class="token operator">=</span><span class="token number">45</span><span class="token number">6</span>*9<span class="token operator">=</span><span class="token number">54</span><span class="token number">7</span>*9<span class="token operator">=</span><span class="token number">63</span><span class="token number">8</span>*9<span class="token operator">=</span><span class="token number">72</span><span class="token number">9</span>*9<span class="token operator">=</span><span class="token number">81</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="continue和break"><a href="#continue和break" class="headerlink" title="continue和break"></a>continue和break</h3><p>无论while循环还是for循环，都是重复性的执行特定操作，在这个重复的过程中，会出现一些其他情况让我们不得不：</p><ul><li>暂时跳出某次循环，直接进行下一次</li><li>提前退出循环，不再继续</li></ul><ol><li><p>continue:中断本次循环，直接进入下一次循环<br>for i in range(1,100):<br> 语句1<br> continue<br> 语句2<br>语句2不会执行<br>应用场景：在循环中，因某些原因，提前结束本次循环</p></li><li><p>break:循环遇到break就结束循环了</p></li></ol><p>无论是continue，还是break,对于嵌套循环，都是对它所在的循环起到作用。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"语句1"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"语句2"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"语句3"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"语句4"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">语句1语句2语句4语句1语句2语句4语句1语句2语句4语句1语句2语句4语句1语句2语句4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>练习案例：某公司，账户余额有1W元，给20名员工发工资。</p><ul><li>员工编号从1-20，从编号1开始，依次领取工资，每人可领取1000元。、</li><li>领工资时，财务判断员工的绩效分(1-10)(随机生成)，如果低于5，不发工资，换下一位</li><li>如果工资发完了，结束发工资。<br>提示：1.使用循环对员工依次发放工资；2. continue用于跳过员工，break直接结束发工资；3.随机数可以使用 <code>import random</code><br><code>num = random.randint(1,10)</code><br>打印格式：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">..</span>.员工11，绩效分4，低于5，不发工资，下一位。向员工12发放工资1000元，账户余额还剩1000元向员工13发放工资1000元，账户余额还剩0元工资发完了，下个月领取吧。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randommoney <span class="token operator">=</span> <span class="token number">10000</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> money <span class="token operator">>=</span> <span class="token number">1000</span><span class="token punctuation">:</span>        jx <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> jx <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"员工</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">，绩效分</span><span class="token interpolation"><span class="token punctuation">&#123;</span>jx<span class="token punctuation">&#125;</span></span><span class="token string">，低于5，不发工资，下一位。"</span></span><span class="token punctuation">)</span>            <span class="token keyword">continue</span>        money <span class="token operator">-=</span> <span class="token number">1000</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"向员工</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">发放工资1000元，账户余额还剩</span><span class="token interpolation"><span class="token punctuation">&#123;</span>money<span class="token punctuation">&#125;</span></span><span class="token string">元"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"工资发完了，下个月领取吧。"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">员工1，绩效分3，低于5，不发工资，下一位。向员工2发放工资1000元，账户余额还剩9000元向员工3发放工资1000元，账户余额还剩8000元向员工4发放工资1000元，账户余额还剩7000元员工5，绩效分2，低于5，不发工资，下一位。员工6，绩效分4，低于5，不发工资，下一位。员工7，绩效分1，低于5，不发工资，下一位。向员工8发放工资1000元，账户余额还剩6000元向员工9发放工资1000元，账户余额还剩5000元向员工10发放工资1000元，账户余额还剩4000元向员工11发放工资1000元，账户余额还剩3000元员工12，绩效分3，低于5，不发工资，下一位。员工13，绩效分2，低于5，不发工资，下一位。员工14，绩效分1，低于5，不发工资，下一位。员工15，绩效分1，低于5，不发工资，下一位。向员工16发放工资1000元，账户余额还剩2000元向员工17发放工资1000元，账户余额还剩1000元向员工18发放工资1000元，账户余额还剩0元工资发完了，下个月领取吧。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css02</title>
      <link href="/2023/05/21/css02/"/>
      <url>/2023/05/21/css02/</url>
      
        <content type="html"><![CDATA[<h2 id="btn效果"><a href="#btn效果" class="headerlink" title="btn效果"></a>btn效果</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Discover our tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.btn:link,.btn:visited</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 15px 40px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .2s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn:hover</span> <span class="token punctuation">&#123;</span>     <span class="token property">transform</span><span class="token punctuation">:</span>  <span class="token function">translateY</span><span class="token punctuation">(</span>-3px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 10px 20px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn:active</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span>  <span class="token function">translateY</span><span class="token punctuation">(</span>-1px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 5px 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn-white</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> Udemy排名第一的高级CSS课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css01</title>
      <link href="/2023/05/20/css01/"/>
      <url>/2023/05/20/css01/</url>
      
        <content type="html"><![CDATA[<h2 id="title"><a href="#title" class="headerlink" title="title"></a>title</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Some text...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.header</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 占视窗高度的95% */</span>    <span class="token property">height</span><span class="token punctuation">:</span> 95vh<span class="token punctuation">;</span>    <span class="token comment">/* linear-gradient 从左上到右下颜色渐变 */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom<span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>126<span class="token punctuation">,</span> 213<span class="token punctuation">,</span> 111<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>40<span class="token punctuation">,</span> 180<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../img/hero.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token comment">/* 自适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment">/* 改变视窗大小时，上部分不改变 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token comment">/* 切片，图片在特定形状里显示*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>0 0<span class="token punctuation">,</span> 100% 0<span class="token punctuation">,</span> 100% 75vh<span class="token punctuation">,</span> 0 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-05-20_21-35-07.png"></p><h3 id="文字及logo"><a href="#文字及logo" class="headerlink" title="文字及logo"></a>文字及logo</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary-sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.header</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 占视窗高度的95% */</span>    <span class="token property">height</span><span class="token punctuation">:</span> 95vh<span class="token punctuation">;</span>    <span class="token comment">/* linear-gradient 从左上到右下颜色渐变 */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom<span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>126<span class="token punctuation">,</span> 213<span class="token punctuation">,</span> 111<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>40<span class="token punctuation">,</span> 180<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../img/hero.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token comment">/* 自适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment">/* 改变视窗大小时，上部分不改变 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token comment">/* 切片，图片在特定形状里显示*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>0 0<span class="token punctuation">,</span> 100% 0<span class="token punctuation">,</span> 100% 75vh<span class="token punctuation">,</span> 0 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.logo-box</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 绝对定位，它都父元素需要相对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.log</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.text-box</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment">/* top、left是相对于父元素位置改变 */</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token comment">/* 相对于自身位置改变 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.heading-primary</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.heading-primary-main</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.heading-primary-sub</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 17.4px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-05-20_22-08-46.png"></p><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/icon-font.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heading-primary-sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.header</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 占视窗高度的95% */</span>    <span class="token property">height</span><span class="token punctuation">:</span> 95vh<span class="token punctuation">;</span>    <span class="token comment">/* linear-gradient 从左上到右下颜色渐变 */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom<span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>126<span class="token punctuation">,</span> 213<span class="token punctuation">,</span> 111<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">rgba</span><span class="token punctuation">(</span>40<span class="token punctuation">,</span> 180<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../img/hero.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token comment">/* 自适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment">/* 改变视窗大小时，上部分不改变 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token comment">/* 切片，图片在特定形状里显示*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>0 0<span class="token punctuation">,</span> 100% 0<span class="token punctuation">,</span> 100% 75vh<span class="token punctuation">,</span> 0 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.logo-box</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 绝对定位，它都父元素需要相对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.log</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.text-box</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment">/* top、left是相对于父元素位置改变 */</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token comment">/* 相对于自身位置改变 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.heading-primary</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>     <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.heading-primary-main</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> moveInLeft<span class="token punctuation">;</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 1s<span class="token punctuation">;</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>    <span class="token comment">/* animation-iteration-count: 3; */</span>    <span class="token comment">/* animation-delay: 3s; */</span><span class="token punctuation">&#125;</span><span class="token selector">.heading-primary-sub</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 17.4px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight 1s ease-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 动画效果 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInLeft</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token comment">/* 动画开始前，元素在x轴更靠左边一点 */</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-100px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 60% &#123;        transform: rotate(180deg);    &#125; */</span>    <span class="token selector">80%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInRight</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token comment">/* 动画开始前，元素在x轴更靠右边一点 */</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">80%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-10px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> Udemy排名第一的高级CSS课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity01</title>
      <link href="/2023/05/20/unity01/"/>
      <url>/2023/05/20/unity01/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>进入Uinty中文网：<a href="https://unity.cn/">https://unity.cn/</a><br>下载Unity Hub,并安装<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-05-20_17-04-57.png"></li><li>在Unity Hub里安装Unity编辑器，选择最新的LTS（长期支持版本）<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-05-20_17-20-11.png"></li><li>新建项目，选择3D(URP),下载模板<br><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/Snipaste_2023-05-20_18-16-59.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python05</title>
      <link href="/2023/05/16/python05/"/>
      <url>/2023/05/16/python05/</url>
      
        <content type="html"><![CDATA[<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span> <span class="token operator">+=</span> i    i <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"1-100累加的和是：</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">sum</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>-100累加的和是：5050<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomnum <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span>flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span>    guess_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你猜测的数字："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    count <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> guess_num <span class="token operator">==</span> num<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"猜中了"</span><span class="token punctuation">)</span>        flag <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> guess_num <span class="token operator">></span> num<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你猜的大了"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你猜的小了"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"你总共猜测了</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">次"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果(结果不唯一)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">请输入你猜测的数字：50你猜的小了请输入你猜测的数字：70你猜的大了请输入你猜测的数字：65你猜的小了请输入你猜测的数字：62你猜的小了请输入你猜测的数字：50你猜的小了请输入你猜测的数字：70你猜的大了请输入你猜测的数字：69猜中了你总共猜测了7次<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p>向小美表白100天，每天送10朵玫瑰花。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 外层：表白100天</span><span class="token comment"># 内层：每天表白都送10只玫瑰花</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"今天是第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">天,准备表白......"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 内层循环</span>    j <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"送给小美第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">只玫瑰花"</span></span><span class="token punctuation">)</span>        j <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"小美，我喜欢你"</span><span class="token punctuation">)</span>    i <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"坚持到第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">天，表白成功"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">D:<span class="token punctuation">\</span>PycharmProjects<span class="token punctuation">\</span>pythonProject1_pachong<span class="token punctuation">\</span>day03.py 今天是第1天,准备表白<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>送给小美第1只玫瑰花送给小美第2只玫瑰花送给小美第3只玫瑰花送给小美第4只玫瑰花送给小美第5只玫瑰花送给小美第6只玫瑰花送给小美第7只玫瑰花送给小美第8只玫瑰花送给小美第9只玫瑰花送给小美第10只玫瑰花小美，我喜欢你<span class="token punctuation">..</span>.<span class="token punctuation">..</span>.<span class="token punctuation">..</span>.今天是第100天,准备表白<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>送给小美第1只玫瑰花送给小美第2只玫瑰花送给小美第3只玫瑰花送给小美第4只玫瑰花送给小美第5只玫瑰花送给小美第6只玫瑰花送给小美第7只玫瑰花送给小美第8只玫瑰花送给小美第9只玫瑰花送给小美第10只玫瑰花小美，我喜欢你坚持到第100天，表白成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印99乘法表<br>默认print语句输出内容会自动换行，如下图：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helloworld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>若想不换行，则：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helloworld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>\t 语句的使用，相当于制表符，可以实现文字对齐效果，如下代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello\tWorld"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你好\t世界"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">HelloWorld你好世界<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打印99乘法表，如果不使用循环：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*1=1"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*2=22*2=4"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*3=32*3=63*3=9"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*4=42*4=83*4=124*4=16"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*5=52*5=103*5=154*5=205*5=25"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*6=62*6=123*6=184*6=245*6=306*6=36"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*7=72*7=143*7=214*7=285*7=356*7=427*7=49"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*8=82*8=163*8=244*8=325*8=406*8=487*8=568*8=64"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1*9=92*9=183*9=274*9=365*9=456*9=547*9=638*9=729*9=81"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用循环：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">:</span>    j <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token operator">*</span>i<span class="token punctuation">&#125;</span></span><span class="token string">\t"</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        j <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    i <span class="token operator">+=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python04</title>
      <link href="/2023/05/16/python04/"/>
      <url>/2023/05/16/python04/</url>
      
        <content type="html"><![CDATA[<h2 id="if语句的基本格式"><a href="#if语句的基本格式" class="headerlink" title="if语句的基本格式"></a>if语句的基本格式</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">30</span><span class="token keyword">if</span> age <span class="token operator">>=</span> <span class="token number">18</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我已经成年了"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"即将步入大学生活"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"时间过得真快"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">我已经成年了即将步入大学生活时间过得真快<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>说明：判断语句的结果，必须是布尔类型True或False，<br>True会执行if内的代码语句，False则不会执行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">17</span><span class="token keyword">if</span> age <span class="token operator">>=</span> <span class="token number">18</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我已经成年了"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你还没成年"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">你还没成年<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="猜数字小游戏"><a href="#猜数字小游戏" class="headerlink" title="猜数字小游戏"></a>猜数字小游戏</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python03</title>
      <link href="/2023/05/15/python03/"/>
      <url>/2023/05/15/python03/</url>
      
        <content type="html"><![CDATA[<h2 id="逻辑判断功能"><a href="#逻辑判断功能" class="headerlink" title="逻辑判断功能"></a>逻辑判断功能</h2><p><img src="https://cdn.jsdelivr.net/gh/panpan987/CDN@master/img/pd.png" alt="判断功能"><br>判断是程序最基础、最核心的逻辑功能。  </p><p>一般格式</p><ol><li><code>if 条件表达式:</code></li><li><code>if 条件表达式: else: </code></li><li><code>if 条件表达式: elif 条件表达式: ... elif 条件表达式: else:</code></li></ol><h2 id="布尔类型和比较运算符"><a href="#布尔类型和比较运算符" class="headerlink" title="布尔类型和比较运算符"></a>布尔类型和比较运算符</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python02</title>
      <link href="/2023/05/14/python02/"/>
      <url>/2023/05/14/python02/</url>
      
        <content type="html"><![CDATA[<h2 id="字符格式化-数字精度控制"><a href="#字符格式化-数字精度控制" class="headerlink" title="字符格式化 - 数字精度控制"></a>字符格式化 - 数字精度控制</h2><p>我们可以使用辅助符号 m.n 来控制数据的宽度和精度</p><ul><li>m, 控制宽度，要求是数字，设置的宽度小于数字自身，不生效</li><li>n, 控制小数点精度，要求是数字，会进行四舍五入<br>示例</li><li>%5d: 表示将整数的宽度控制在5位，如数字11，被设置为5d，就会变成：【空格】【空格】【空格】11，用三个空格补足宽度</li><li>%5.2f: 表示宽度为5，小数点精度为2<br>小数点和小数部分也算入宽度计算，如11.345设置了%7.2f后，结果是【空格】【空格】11.35。2个空格补足宽度，小数部分限制2位精度后，四舍五入为.35</li><li>%.2f: 表示不限制宽度，只设置小数点精度为2，如11.345设置%.2f后，结果是11.35</li></ul><h2 id="字符串的格式化2"><a href="#字符串的格式化2" class="headerlink" title="字符串的格式化2"></a>字符串的格式化2</h2><p>之前使用 % 占位，还可以使用f”内容{变量}”进行快速格式化</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"苹果17"</span>year <span class="token operator">=</span> <span class="token number">2023</span>month <span class="token operator">=</span> <span class="token number">6</span>price <span class="token operator">=</span> <span class="token number">6999.99</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"一个叫做</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">的手机,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>year<span class="token punctuation">&#125;</span></span><span class="token string">年</span><span class="token interpolation"><span class="token punctuation">&#123;</span>month<span class="token punctuation">&#125;</span></span><span class="token string">月上市，价格为：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>price<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">一个叫做苹果17的手机,2023年6月上市，价格为：6999.99<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>股票练习题</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"无忧旅馆"</span>stock_price <span class="token operator">=</span> <span class="token number">19.99</span>stock_code <span class="token operator">=</span> <span class="token string">"003032"</span>stock_price_daily_growth_factor <span class="token operator">=</span> <span class="token number">1.2</span>growth_days <span class="token operator">=</span> <span class="token number">7</span>finally_stock_price <span class="token operator">=</span> stock_price <span class="token operator">*</span> stock_price_daily_growth_factor <span class="token operator">**</span> growth_days<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"公司：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">,股票代码：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>stock_code<span class="token punctuation">&#125;</span></span><span class="token string">,当前股价：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>stock_price<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"每日增长系数：%.1f,经过%d天的增长后，股价达到了：%.2f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>stock_price_daily_growth_factor<span class="token punctuation">,</span>growth_days<span class="token punctuation">,</span>finally_stock_price<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">公司：无忧旅馆,股票代码：003032,当前股价：19.99每日增长系数：1.2,经过7天的增长后，股价达到了：71.63<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="input语句"><a href="#input语句" class="headerlink" title="input语句"></a>input语句</h2><p>获取键盘输入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请告诉我你是谁?"</span><span class="token punctuation">)</span>name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我知道了，你是：%s"</span> <span class="token operator">%</span> name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">请告诉我你是谁?安度因我知道了，你是：安度因<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python01</title>
      <link href="/2023/05/14/python01/"/>
      <url>/2023/05/14/python01/</url>
      
        <content type="html"><![CDATA[<h2 id="Python中常用6种数据类型"><a href="#Python中常用6种数据类型" class="headerlink" title="Python中常用6种数据类型"></a>Python中常用6种数据类型</h2><table><thead><tr><th>类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>数字（Number）</td><td><code>支持：</code> <br> 整数（int）<br> 浮点数（float）<br> 复数（complex）<br> 布尔（bool）</td><td><br> 整数(int), 如：10、-3 <br> 浮点数(float), 如13.14，-3.15 <br> 复数，如4+3j <br> 布尔，True为真，False为假</td></tr><tr><td>字符串(String)</td><td>描述文本的一种数据类型</td><td>字符串(String)由任意数量的字符组成</td></tr><tr><td>列表（list）</td><td>有序的可变序列</td><td>Python里面使用最频繁的数据类型，可有序记录一堆数据</td></tr><tr><td>元组（Tuple）</td><td>有序不可变序列</td><td></td></tr><tr><td>集合（set）</td><td>无序不重复集合</td><td></td></tr><tr><td>字典（Dictionary）</td><td>无序key-value集合</td><td></td></tr></tbody></table><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量：在程序运行时，能存储计算结果或能表示值的抽象概念。简单来说，变量就是在程序运行时，记录数据用的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">money <span class="token operator">=</span> <span class="token number">20</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"钱包还有："</span><span class="token punctuation">,</span>money<span class="token punctuation">)</span>money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">10</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"买了冰淇淋花费10元，还剩余："</span><span class="token punctuation">,</span> money<span class="token punctuation">,</span><span class="token string">"元"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字符串、数字转换"><a href="#字符串、数字转换" class="headerlink" title="字符串、数字转换"></a>字符串、数字转换</h2><table><thead><tr><th>语句（函数）</th><th>说明</th></tr></thead><tbody><tr><td>int(x)</td><td>将x转化为一个整数</td></tr><tr><td>float(x)</td><td>将x转换为一个浮点数</td></tr><tr><td>str(x)</td><td>将对象x转换为字符串</td></tr></tbody></table><p>说明：万物皆可转字符串，因为万物带上双引号就是字符串，但是想将字符串转为数字，需要确保字符串的内容都是数字才可以。特别：整数也会转为浮点数，如 a &#x3D; float（11），结果a&#x3D;11.0; 浮点数也会转为整数，如b &#x3D; int(3.1415), 结果b&#x3D;3, 会丢失精度，即丢失掉小数的部分。</p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>在Python中，我们可以给很多东西起名字，比如：</p><ul><li>变量的名字</li><li>方法的名字</li><li>类的名字</li><li>函数的名字，等等</li></ul><p>这些名字，我们统一称之为标识符，用来做内容的标识。</p><p>标识符的命名中，只允许出现：</p><ul><li>英文</li><li>中文</li><li>数字</li><li>下划线 _</li></ul><p>这四类元素，其余内容不被允许。<br>规则：1.不推荐使用中文；2.不可以用数字开头；3.大小写敏感；4.不可以使用关键字。<br>关键字在Python中都有特定的用途：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">False   True    None    and     as      assert   break    classcontine def     del     elif    else    except   finally  for from    global  if      import  in      is       lambda   nonlocalnot     or      pass    raise   return  try      while    with     yield<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>a + b</td></tr><tr><td>-</td><td>减</td><td>a - b</td></tr><tr><td>*</td><td>乘</td><td>a * b</td></tr><tr><td>&#x2F;</td><td>除</td><td>a &#x2F; b，如a&#x3D;10,b&#x3D;3,c&#x3D;a&#x2F;b,则c&#x3D;3.3333333333333335</td></tr><tr><td>&#x2F;&#x2F;</td><td>取整</td><td>a&#x2F;&#x2F;b，返回整数部分</td></tr><tr><td>%</td><td>取余</td><td>a%b，返回余数部分</td></tr><tr><td>**</td><td>指数</td><td>a**b,如a&#x3D;10,b&#x3D;2,则10的平方为100</td></tr></tbody></table><h2 id="字符串的三种定义方式"><a href="#字符串的三种定义方式" class="headerlink" title="字符串的三种定义方式"></a>字符串的三种定义方式</h2><ul><li>单引号定义法：name &#x3D; ‘张三’</li><li>双引号定义法：name &#x3D; “张三”</li><li>三引号定义法：name &#x3D; “””张三”””</li></ul><p>三引号定义法，和多行注释写法一样，同时支持换行操作。<br>使用变量接收它，它就是字符串，不使用变量接收它，就可以作为多行注释使用。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用 \ 这个转义字符可以把第二、三个引号的效力取消，使他们不再有定义字符串的效果，转为普通的字符串</span>name <span class="token operator">=</span> <span class="token string">"\"魂斗罗天下第一\""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接"></a>字符串的拼接</h2><p>字符串和字符串间的拼接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"PHP"</span> <span class="token operator">+</span> <span class="token string">"是世界上最好的语言"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PHP是世界上最好的语言<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>字符串和变量之间的拼接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Java"</span>effect <span class="token operator">=</span> <span class="token string">"可以做网站后端"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> effect<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">我是Java,可以做网站后端<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果变量是数字呢</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"小王"</span>address <span class="token operator">=</span> <span class="token string">"人民东路108号"</span>tel <span class="token operator">=</span> <span class="token number">4006188080</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">",我的地址是："</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">",我的电话是："</span> <span class="token operator">+</span> tel<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">print<span class="token punctuation">(</span><span class="token string">"我是"</span> + name + <span class="token string">",我的地址是："</span> + address + <span class="token string">",我的电话是："</span> + tel<span class="token punctuation">)</span>TypeError: can only concatenate str <span class="token punctuation">(</span>not <span class="token string">"int"</span><span class="token punctuation">)</span> to str<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>字符串没有办法和数字完成拼接的，需要转化</p><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">anyu <span class="token operator">=</span> <span class="token string">"宝塔镇河妖"</span>message <span class="token operator">=</span> <span class="token string">"天王盖地虎, %s"</span> <span class="token operator">%</span> anyu<span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">天王盖地虎, 宝塔镇河妖<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，%s</p><ul><li>% 表示：我要占位</li><li>s 表示：将变量变成字符串放入占位的地方</li></ul><p>那，数字类型呢？可以用占位？<br>那必须可以的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">nf <span class="token operator">=</span> <span class="token number">2023</span>zy <span class="token operator">=</span> <span class="token string">"计算机专业"</span>avg_salary <span class="token operator">=</span> <span class="token number">17000</span>message <span class="token operator">=</span> <span class="token string">"根据大数据显示，%s年%s毕业的学生平均月薪为%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>nf<span class="token punctuation">,</span> zy<span class="token punctuation">,</span> avg_salary<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">根据大数据显示，2023年计算机专业毕业的学生平均月薪为17000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在Python中，其实支持很多的数据类型占位<br>最常用的是如下三类</p><table><thead><tr><th>格式符号</th><th>转化</th></tr></thead><tbody><tr><td>%s</td><td>将内容转化成字符串，放入占位位置</td></tr><tr><td>%d</td><td>将内容转换成整数，放入占位位置</td></tr><tr><td>%f</td><td>将内容转换成浮点型，放入占位位置</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"panda电竞鼠标"</span>year <span class="token operator">=</span> <span class="token number">2023</span>price <span class="token operator">=</span> <span class="token number">19.99</span>message <span class="token operator">=</span> <span class="token string">"根据大数据显示,%d年这一款名为%s的产品售价仅仅需要%f元"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>year<span class="token punctuation">,</span> name<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">根据大数据显示,2023年这一款名为panda电竞鼠标的产品售价仅仅需要19.990000元<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test-page</title>
      <link href="/2018/09/07/test/"/>
      <url>/2018/09/07/test/</url>
      
        <content type="html"><![CDATA[<h2 id="这个是我的测试页面"><a href="#这个是我的测试页面" class="headerlink" title="这个是我的测试页面"></a>这个是我的测试页面</h2><ul><li>首先，打开冰箱门<br>这一步很关键</li><li>其次，把大象装到冰箱</li><li>接着，关上冰箱门<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> renum <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">if</span> num <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你好丑！！！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><img src="https://img0.baidu.com/it/u=4137668574,1684066056&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1684170000&t=ac248dd8026f545d3e018423b7d4fd73"></p><p><a href="https://www.bilibili.com/read/cv21489146/">点击跳转神奇的网站</a></p><h4 id="小学生课程表"><a href="#小学生课程表" class="headerlink" title="小学生课程表"></a>小学生课程表</h4><table><thead><tr><th align="right"></th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th></tr></thead><tbody><tr><td align="right"><strong>1</strong></td><td>数学</td><td>英语</td><td>数学</td><td>语文</td><td>品德</td></tr><tr><td align="right"><strong>2</strong></td><td>美术</td><td>数学</td><td>品德</td><td>数学</td><td>语文</td></tr><tr><td align="right"><strong>3</strong></td><td>品德</td><td>品德</td><td>语文</td><td>体育</td><td>数学</td></tr><tr><td align="right"><strong>4</strong></td><td>语文</td><td>音乐</td><td>体育</td><td>品德</td><td>美术</td></tr><tr><td align="right"><strong>5</strong></td><td>数学</td><td>英语</td><td>语文</td><td>数学</td><td>语文</td></tr><tr><td align="right"><strong>6</strong></td><td>品德</td><td>数学</td><td>美术</td><td>劳动</td><td>活动</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2012/06/06/hello-world/"/>
      <url>/2012/06/06/hello-world/</url>
      
        <content type="html"><![CDATA[<hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
